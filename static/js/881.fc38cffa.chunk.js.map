{"version":3,"file":"static/js/881.fc38cffa.chunk.js","mappings":"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","sources":["components/common/BackButton.js","components/pages/users/UserTab.js","components/pages/users/Users.js","hooks/useMobile.js"],"sourcesContent":["import React from 'react';\r\nimport { BiChevronLeft } from \"react-icons/bi\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst BackButton = () => {\r\n  const navigate = useNavigate();\r\n  const handleClick = () => navigate(-1);\r\n  \r\n  return (\r\n    <button type='button' className='back-button link' onClick={handleClick}><BiChevronLeft className='icon'/>Back</button>\r\n  )\r\n}\r\n\r\nexport default BackButton;","import React from 'react';\r\nimport ProfilePicture from '../../common/ProfilePicture';\r\nimport BlankProfilePicture from '../../common/BlankProfilePicture';\r\nimport { BsCircleFill } from 'react-icons/bs';\r\nimport IconContainer from '../../common/IconContainer';\r\n\r\nconst UserTab = ({user, onClick, additionalContent}) => {\r\n    const onlineStatusIcon = (user) => {\r\n        return <BsCircleFill className={user.online ? 'icon online-status green' : 'icon online-status grey'}/>\r\n    }\r\n\r\n    const checkProfileURL = (user) => {\r\n        return user.base64_img_data ? Buffer.from(user.base64_img_data) : user.img_url.toString();\r\n    }\r\n    \r\n  return (\r\n    <div className='user-tab' onClick={onClick}>\r\n        {user.base64_img_data || user.img_url\r\n            ? <ProfilePicture src={checkProfileURL(user)}/>\r\n            : <BlankProfilePicture/>\r\n        }\r\n        \r\n        <IconContainer title={user.online ? 'Online' : 'Offline'} icon={onlineStatusIcon(user)}/>\r\n\r\n        <div className='user-tab-content'>\r\n            <h4>{user.first_name} {user.last_name}</h4>\r\n            {user.header ? <p>{user.header}</p> : null}\r\n        </div>\r\n\r\n        <div id='userTabAdditionalContent'>{additionalContent ? additionalContent : null}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserTab;","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport BackButton from '../../common/BackButton';\r\nimport SearchBar from '../../common/SearchBar';\r\nimport { fetchMembersAsync } from '../../../store/members/members.actions';\r\nimport Line from '../../common/Line';\r\nimport useAuth from '../../../hooks/useAuth';\r\nimport UserTab from './UserTab';\r\nimport { generateKey } from '../../../utils/keyGenerator';\r\nimport useProject from '../../../hooks/useProject';\r\nimport {BsChatLeftText, BsPlus, BsSearch} from \"react-icons/bs\";\r\nimport IconContainer from '../../common/IconContainer';\r\nimport { IoPersonCircleOutline } from 'react-icons/io5';\r\nimport useMobile from '../../../hooks/useMobile';\r\nimport { fetchChatAsync, setCurrentContact } from '../../../store/chat/chat.actions';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { selectChats } from '../../../store/chat/chat.selectors';\r\nimport useChat from '../../../hooks/useChat';\r\nimport { AiOutlineMinus } from 'react-icons/ai';\r\nimport useMembers from '../../../hooks/useMembers';\r\nimport useSocketEvents from '../../../hooks/useSocketEvents';\r\nimport { setTargetUser, setUserProfileOpen } from '../../../store/globalStates/globalStates.actions';\r\n\r\nconst Users = () => {\r\n  const {members} = useMembers();\r\n  const {user, userInfo} = useAuth();\r\n  const dispatch = useDispatch();\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const {\r\n    currentProject,\r\n    handleAddMember,\r\n    handleRemoveMemberFromProject,\r\n    isAdmin\r\n  } = useProject();\r\n  const {isMobile} = useMobile();\r\n  const navigate = useNavigate();\r\n  const chats = useSelector(selectChats);\r\n  const {createNewChat, fetchUserChats} = useChat();\r\n\r\n  // Check search input\r\n  const checkSearchInput = (input) => {\r\n    if (members.some(member => member.first_name.toLowerCase().includes(input.toLowerCase()) ||\r\n      member.last_name.toLowerCase().includes(input.toLowerCase()))\r\n    ) {\r\n      const matchingUsers = [...members?.filter(member => member.first_name.toLowerCase().includes(input.toLowerCase()) ||\r\n      member.last_name.toLowerCase().includes(input.toLowerCase()))];\r\n\r\n      setSearchResults([...matchingUsers]);\r\n    }\r\n  }\r\n\r\n  // Handle input change\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  }\r\n\r\n  const handleViewProfile = (user) => {\r\n    // Set targetUser\r\n    dispatch(setTargetUser(user));\r\n\r\n    // Open user profile\r\n    dispatch(setUserProfileOpen(true));\r\n  }\r\n\r\n  // Handle start chat\r\n  const handleStartChat = (contactId) => {\r\n    \r\n    // Get contact and set to currentContact\r\n    const contact = members.find(m => m._id === contactId);\r\n    dispatch(setCurrentContact(contact));\r\n\r\n    // Check if chat exists\r\n    const chatExists = chats?.some(chat => chat.users.some(uid => uid === contactId));\r\n\r\n    // If not, create new chat\r\n    if (!chatExists) return createNewChat(userInfo?._id, contact);\r\n\r\n    // Start chat\r\n    dispatch(fetchChatAsync(userInfo?._id, contactId));\r\n    navigate(`/chat/${userInfo?._id}`);\r\n  }\r\n\r\n  // Check search input\r\n  useEffect(() => {\r\n    if (!inputValue.length || !inputValue) setSearchResults([]);\r\n    checkSearchInput(inputValue);\r\n  }, [inputValue]);\r\n\r\n  // Fetch all users and all current user's chats\r\n  useEffect(() => {\r\n    dispatch(fetchMembersAsync());\r\n    fetchUserChats();\r\n  }, []);\r\n\r\n\r\n  // Handle searchResults on Online event\r\n  const handleOnline = (data) => {\r\n    if (searchResults.length && searchResults.some(res => res._id === data.userId)) {\r\n      setSearchResults([...searchResults.map(searchRes => {\r\n        if (searchRes._id === data.userId) {\r\n          return {...searchRes, online: true};\r\n        } else return searchRes;\r\n      })])\r\n    }\r\n  }\r\n\r\n  // Handle searchResults on Offline event\r\n  const handleOffline = (data) => {\r\n    if (searchResults.length && searchResults.some(res => res._id === data.userId)) {\r\n      setSearchResults([...searchResults.map(searchRes => {\r\n        if (searchRes._id === data.userId) {\r\n          return {...searchRes, online: false};\r\n        } else return searchRes;\r\n      })])\r\n    }\r\n  }\r\n \r\n  // Listen to socket events\r\n  useSocketEvents({\r\n    events: {\r\n      online: handleOnline,\r\n      offline: handleOffline\r\n    }\r\n  });\r\n\r\n  const userAdditionalContent = (member) => <>\r\n    <div className='buttons-container'>\r\n\r\n      <button className='btn white' onClick={() => handleViewProfile(member)} title={`View ${member.first_name}'s profile`}>\r\n        <IconContainer icon={<IoPersonCircleOutline className='icon xl'/>}/>\r\n        <span className='btn-text'>View profile</span>\r\n      </button>\r\n\r\n      {currentProject?.members?.some(m => m._id === member._id)\r\n        && isAdmin\r\n        &&  <button className='btn white' title={`Remove ${member.first_name} from project`} onClick={() => handleRemoveMemberFromProject(member._id)}>\r\n              <IconContainer icon={<AiOutlineMinus className='icon'/>}/>\r\n              <span className='btn-text'>Remove from project</span>\r\n            </button>\r\n      }\r\n\r\n      {!currentProject?.members?.some(m => m._id === member._id)\r\n        && isAdmin\r\n        &&  <button className='btn white' title={`Add ${member.first_name} to project`} onClick={() => handleAddMember(member)}>\r\n              <IconContainer icon={<BsPlus className='icon xl'/>}/>\r\n              <span className='btn-text'>Add to project</span>\r\n            </button>\r\n      }\r\n\r\n      </div>\r\n  </>\r\n\r\n  return (\r\n      <>\r\n        <div className='users-container'>\r\n\r\n          <BackButton/>\r\n\r\n          <div className='title'>\r\n            <h1>Users</h1>\r\n            <SearchBar\r\n              value={inputValue}\r\n              fn={handleInputChange}\r\n              placeholderText={\"Search users\"}\r\n              icon={<IconContainer icon={<BsSearch className='icon'/>}/>}\r\n            />\r\n          </div>\r\n\r\n            <div className='results-container'>\r\n              <p>{members?.filter(member => member._id !== user?._id).length} {members?.filter(member => member._id !== user?._id).length === 1 ? \"user found\": \"users found\"}</p>\r\n              <Line/>\r\n              <h3>Results <span>({searchResults.filter(user => user._id !== userInfo?._id).length})</span></h3>\r\n              <div className='grid-container'>\r\n                {searchResults.length\r\n                  ? <>\r\n                      {searchResults?.filter(member => member._id !== user?._id).map(member => {\r\n                        return (\r\n                          <>\r\n                          <div key={generateKey()} className='search-result'>\r\n                            <UserTab user={member} onClick={() => handleViewProfile(member)} additionalContent={userAdditionalContent(member)}/>\r\n                          </div>\r\n                          </>\r\n                        )\r\n                      })}\r\n                    </>\r\n                  : members?.filter(m => m._id !== user?._id).map(member => {\r\n                    return (\r\n                      <div key={generateKey()} className='search-result'>\r\n                        <UserTab user={member} additionalContent={userAdditionalContent(member)}/>\r\n                      </div>\r\n                    )\r\n                  })\r\n                }\r\n              </div>\r\n              \r\n            </div>\r\n\r\n        </div>\r\n      </>\r\n  )\r\n}\r\n\r\nexport default Users;","import { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setIsMobile } from '../store/globalStates/globalStates.actions';\r\nimport { selectIsMobile } from '../store/globalStates/globalStates.selector';\r\n\r\nconst useMobile = () => {\r\n    const isMobile = useSelector(selectIsMobile);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleResize = () => {\r\n        if (window.innerWidth <= 1280) {\r\n            dispatch(setIsMobile(true));\r\n        } else {\r\n            dispatch(setIsMobile(false));\r\n        }\r\n    };\r\n\r\n   // Handle screen size\r\n    useEffect(() => {\r\n    \r\n        window.addEventListener('load', handleResize);\r\n        window.addEventListener('resize', handleResize);\r\n    \r\n        return () => {\r\n            window.removeEventListener('load', handleResize);\r\n            window.removeEventListener('resize', handleResize);\r\n        };\r\n    }, []);\r\n\r\n  return {\r\n    isMobile\r\n  }\r\n}\r\n\r\nexport default useMobile;"],"names":["navigate","useNavigate","_jsxs","type","className","onClick","children","_jsx","BiChevronLeft","_ref","user","additionalContent","base64_img_data","img_url","ProfilePicture","src","Buffer","from","toString","checkProfileURL","BlankProfilePicture","IconContainer","title","online","icon","BsCircleFill","onlineStatusIcon","first_name","last_name","header","id","members","useMembers","_useAuth","useAuth","userInfo","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","inputValue","setInputValue","_useState3","_useState4","searchResults","setSearchResults","_useProject","useProject","currentProject","handleAddMember","handleRemoveMemberFromProject","isAdmin","_useChat","useMobile","isMobile","useSelector","selectChats","useChat","fetchUserChats","createNewChat","handleViewProfile","setTargetUser","setUserProfileOpen","useEffect","length","input","some","member","toLowerCase","includes","matchingUsers","_toConsumableArray","filter","checkSearchInput","fetchMembersAsync","useSocketEvents","events","data","res","_id","userId","map","searchRes","_objectSpread","offline","userAdditionalContent","_currentProject$membe","_currentProject$membe2","_Fragment","concat","IoPersonCircleOutline","m","AiOutlineMinus","BsPlus","BackButton","SearchBar","value","fn","e","target","placeholderText","BsSearch","Line","UserTab","generateKey","selectIsMobile","handleResize","window","innerWidth","setIsMobile","addEventListener","removeEventListener"],"sourceRoot":""}