{"version":3,"file":"static/js/17.2a01bb8e.chunk.js","mappings":"qTAkCA,EA5BgB,SAAHA,GAA4C,IAAvCC,EAAID,EAAJC,KAAMC,EAAOF,EAAPE,QAASC,EAAiBH,EAAjBG,kBAS/B,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAWH,QAASA,EAAQI,SAAA,CACtCL,EAAKM,iBAAmBN,EAAKO,SACxBC,EAAAA,EAAAA,KAACC,EAAAA,EAAc,CAACC,IAPF,SAACV,GACrB,OAAOA,EAAKM,gBAAkBK,OAAOC,KAAKZ,EAAKM,iBAAmBN,EAAKO,QAAQM,UACnF,CAK+BC,CAAgBd,MACrCQ,EAAAA,EAAAA,KAACO,EAAAA,EAAmB,KAG1BP,EAAAA,EAAAA,KAACQ,EAAAA,EAAa,CAACC,MAAOjB,EAAKkB,OAAS,SAAW,UAAWC,KAfrC,SAACnB,GACtB,OAAOQ,EAAAA,EAAAA,KAACY,EAAAA,IAAY,CAAChB,UAAWJ,EAAKkB,OAAS,2BAA6B,2BAC/E,CAaoEG,CAAiBrB,MAEjFG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC7BF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CAAKL,EAAKsB,WAAW,IAAEtB,EAAKuB,aAC3BvB,EAAKwB,QAAShB,EAAAA,EAAAA,KAAA,KAAAH,SAAIL,EAAKwB,SAAc,SAG1ChB,EAAAA,EAAAA,KAAA,OAAKiB,GAAG,2BAA0BpB,SAAEH,GAAwC,SAGpF,E,sHCwMA,G,QAhNc,WACZ,IAAOwB,GAAWC,EAAAA,EAAAA,KAAXD,QACPE,GAAyBC,EAAAA,EAAAA,KAAlB7B,EAAI4B,EAAJ5B,KAAM8B,EAAQF,EAARE,SACPC,GAAWC,EAAAA,EAAAA,MACjBC,GAAoCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAChCI,GAA0CL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA/CE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACtCG,GAKIC,EAAAA,EAAAA,KAJFC,EAAcF,EAAdE,eACAC,EAAeH,EAAfG,gBACAC,EAA6BJ,EAA7BI,8BACAC,EAAOL,EAAPK,QAEKC,GAAYC,EAAAA,EAAAA,KAAZD,SACDE,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAC1BC,GAAwCC,EAAAA,EAAAA,KAAjCC,EAAaF,EAAbE,cAAeC,EAAcH,EAAdG,eAkBhBC,EAAoB,SAAC5D,GAEzB+B,GAAS8B,EAAAA,EAAAA,IAAc7D,IAGvB+B,GAAS+B,EAAAA,EAAAA,KAAmB,GAC9B,GAqBAC,EAAAA,EAAAA,YAAU,WACH1B,EAAW2B,QAAQtB,EAAiB,IA3ClB,SAACuB,GACxB,GAAIvC,EAAQwC,MAAK,SAAAC,GAAM,OAAIA,EAAO7C,WAAW8C,cAAcC,SAASJ,EAAMG,gBACxED,EAAO5C,UAAU6C,cAAcC,SAASJ,EAAMG,cAAc,IAC5D,CACA,IAAME,GAAaC,EAAAA,EAAAA,GAAc,OAAP7C,QAAO,IAAPA,OAAO,EAAPA,EAAS8C,QAAO,SAAAL,GAAM,OAAIA,EAAO7C,WAAW8C,cAAcC,SAASJ,EAAMG,gBACnGD,EAAO5C,UAAU6C,cAAcC,SAASJ,EAAMG,cAAc,KAC5D1B,GAAgB6B,EAAAA,EAAAA,GAAKD,GACvB,CACF,CAoCEG,CAAiBpC,EACnB,GAAG,CAACA,KAGJ0B,EAAAA,EAAAA,YAAU,WACRhC,GAAS2C,EAAAA,EAAAA,OACTf,GACF,GAAG,KA0BHgB,EAAAA,EAAAA,GAAgB,CACdC,OAAQ,CACN1D,OAxBiB,SAAC2D,GAChBpC,EAAcuB,QAAUvB,EAAcyB,MAAK,SAAAY,GAAG,OAAIA,EAAIC,MAAQF,EAAKG,MAAM,KAC3EtC,GAAgB6B,EAAAA,EAAAA,GAAK9B,EAAcwC,KAAI,SAAAC,GACrC,OAAIA,EAAUH,MAAQF,EAAKG,QACzBG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWD,GAAS,IAAEhE,QAAQ,IAClBgE,CAChB,KAEJ,EAiBIE,QAdkB,SAACP,GACjBpC,EAAcuB,QAAUvB,EAAcyB,MAAK,SAAAY,GAAG,OAAIA,EAAIC,MAAQF,EAAKG,MAAM,KAC3EtC,GAAgB6B,EAAAA,EAAAA,GAAK9B,EAAcwC,KAAI,SAAAC,GACrC,OAAIA,EAAUH,MAAQF,EAAKG,QACzBG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWD,GAAS,IAAEhE,QAAQ,IAClBgE,CAChB,KAEJ,KAUA,IAAMG,EAAwB,SAAClB,GAAM,IAAAmB,EAAAC,EAAA,OAAK/E,EAAAA,EAAAA,KAAAgF,EAAAA,SAAA,CAAAnF,UACxCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAEhCF,EAAAA,EAAAA,MAAA,UAAQC,UAAU,YAAYH,QAAS,kBA/DnB,SAACwF,GAGvB,IAAMC,EAAUhE,EAAQiE,MAAK,SAAAC,GAAC,OAAIA,EAAEb,MAAQU,CAAS,IAOrD,GANA1D,GAAS8D,EAAAA,EAAAA,IAAkBH,MAGH,OAALrC,QAAK,IAALA,OAAK,EAALA,EAAOa,MAAK,SAAA4B,GAAI,OAAIA,EAAKC,MAAM7B,MAAK,SAAA8B,GAAG,OAAIA,IAAQP,CAAS,GAAC,KAG/D,OAAO/B,EAAsB,OAAR5B,QAAQ,IAARA,OAAQ,EAARA,EAAUiD,IAAKW,GAGrD3D,GAASkE,EAAAA,EAAAA,IAAuB,OAARnE,QAAQ,IAARA,OAAQ,EAARA,EAAUiD,IAAKU,IACvCtC,EAAS,SAAD+C,OAAkB,OAARpE,QAAQ,IAARA,OAAQ,EAARA,EAAUiD,KAC9B,CAgDiDoB,CAAgBhC,EAAOY,IAAI,EAAE9D,MAAK,aAAAiF,OAAe/B,EAAO7C,YAAajB,SAAA,EAChHG,EAAAA,EAAAA,KAACQ,EAAAA,EAAa,CAACG,MAAMX,EAAAA,EAAAA,KAAC4F,EAAAA,IAAc,CAAChG,UAAU,WAC9C6C,EAAW,GAAK,eAGnB9C,EAAAA,EAAAA,MAAA,UAAQC,UAAU,YAAYH,QAAS,kBAAM2D,EAAkBO,EAAO,EAAElD,MAAK,QAAAiF,OAAU/B,EAAO7C,WAAU,cAAajB,SAAA,EACnHG,EAAAA,EAAAA,KAACQ,EAAAA,EAAa,CAACG,MAAMX,EAAAA,EAAAA,KAAC6F,EAAAA,IAAqB,CAACjG,UAAU,cACrD6C,EAAW,GAAK,oBAGJ,OAAdJ,QAAc,IAAdA,GAAuB,QAATyC,EAAdzC,EAAgBnB,eAAO,IAAA4D,OAAT,EAAdA,EAAyBpB,MAAK,SAAA0B,GAAC,OAAIA,EAAEb,MAAQZ,EAAOY,GAAG,MACnD/B,IACC7C,EAAAA,EAAAA,MAAA,UAAQC,UAAU,YAAYa,MAAK,UAAAiF,OAAY/B,EAAO7C,WAAU,iBAAiBrB,QAAS,kBAAM8C,EAA8BoB,EAAOY,IAAI,EAAC1E,SAAA,EACxIG,EAAAA,EAAAA,KAACQ,EAAAA,EAAa,CAACG,MAAMX,EAAAA,EAAAA,KAAC8F,EAAAA,IAAc,CAAClG,UAAU,WAAY6C,EAAW,GAAK,4BAInE,OAAdJ,QAAc,IAAdA,GAAuB,QAAT0C,EAAd1C,EAAgBnB,eAAO,IAAA6D,GAAvBA,EAAyBrB,MAAK,SAAA0B,GAAC,OAAIA,EAAEb,MAAQZ,EAAOY,GAAG,MACpD/B,IACC7C,EAAAA,EAAAA,MAAA,UAAQC,UAAU,YAAYa,MAAK,OAAAiF,OAAS/B,EAAO7C,WAAU,eAAerB,QAAS,kBAAM6C,EAAgBqB,EAAO,EAAC9D,SAAA,EACjHG,EAAAA,EAAAA,KAACQ,EAAAA,EAAa,CAACG,MAAMX,EAAAA,EAAAA,KAAC+F,EAAAA,IAAM,CAACnG,UAAU,cAAe6C,EAAU,GAAK,yBAK9E,EAEH,OACIzC,EAAAA,EAAAA,KAAAgF,EAAAA,SAAA,CAAAnF,UACEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAE9BG,EAAAA,EAAAA,KAACgG,EAAAA,EAAU,KAEXrG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,QAAOC,SAAA,EACpBG,EAAAA,EAAAA,KAAA,MAAAH,SAAI,WACJG,EAAAA,EAAAA,KAACiG,EAAAA,EAAS,CACRC,MAAOrE,EACPsE,GAjHc,SAACC,GACzBtE,EAAcsE,EAAEC,OAAOH,MACzB,EAgHYI,gBAAiB,eACjB3F,MAAMX,EAAAA,EAAAA,KAACQ,EAAAA,EAAa,CAACG,MAAMX,EAAAA,EAAAA,KAACuG,EAAAA,IAAQ,CAAC3G,UAAU,iBAIjDD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAChCF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAW,OAAPqB,QAAO,IAAPA,OAAO,EAAPA,EAAS8C,QAAO,SAAAL,GAAM,OAAIA,EAAOY,OAAY,OAAJ/E,QAAI,IAAJA,OAAI,EAAJA,EAAM+E,IAAG,IAAEf,OAAO,IAAiE,KAAxD,OAAPtC,QAAO,IAAPA,OAAO,EAAPA,EAAS8C,QAAO,SAAAL,GAAM,OAAIA,EAAOY,OAAY,OAAJ/E,QAAI,IAAJA,OAAI,EAAJA,EAAM+E,IAAG,IAAEf,QAAe,aAAc,kBAClJxD,EAAAA,EAAAA,KAACwG,EAAAA,EAAI,KACLxG,EAAAA,EAAAA,KAAA,MAAAH,SAAI,aACJG,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,iBAAgBC,SAC5BoC,EAAcuB,QACXxD,EAAAA,EAAAA,KAAAgF,EAAAA,SAAA,CAAAnF,SACgB,OAAboC,QAAa,IAAbA,OAAa,EAAbA,EAAe+B,QAAO,SAAAL,GAAM,OAAIA,EAAOY,OAAY,OAAJ/E,QAAI,IAAJA,OAAI,EAAJA,EAAM+E,IAAG,IAAEE,KAAI,SAAAd,GAC7D,OACE3D,EAAAA,EAAAA,KAAAgF,EAAAA,SAAA,CAAAnF,UACAG,EAAAA,EAAAA,KAAA,OAAyBJ,UAAU,gBAAeC,UAChDG,EAAAA,EAAAA,KAACyG,EAAO,CAACjH,KAAMmE,EAAQlE,QAAS,kBAAM2D,EAAkBO,EAAO,EAAEjE,kBAAmBmF,EAAsBlB,OADlG+C,EAAAA,EAAAA,OAKd,MAEK,OAAPxF,QAAO,IAAPA,OAAO,EAAPA,EAAS8C,QAAO,SAAAoB,GAAC,OAAIA,EAAEb,OAAY,OAAJ/E,QAAI,IAAJA,OAAI,EAAJA,EAAM+E,IAAG,IAAEE,KAAI,SAAAd,GAC9C,OACE3D,EAAAA,EAAAA,KAAA,OAAyBJ,UAAU,gBAAeC,UAChDG,EAAAA,EAAAA,KAACyG,EAAO,CAACjH,KAAMmE,EAAQjE,kBAAmBmF,EAAsBlB,OADxD+C,EAAAA,EAAAA,KA8Bd,aASlB,E,gECzNA,IATmB,WACjB,IAAM/D,GAAWC,EAAAA,EAAAA,MAGjB,OACEjD,EAAAA,EAAAA,MAAA,UAAQgH,KAAK,SAAS/G,UAAU,mBAAmBH,QAHjC,WAAH,OAASkD,GAAU,EAAG,EAGmC9C,SAAA,EAACG,EAAAA,EAAAA,KAAC4G,EAAAA,IAAa,CAAChH,UAAU,SAAQ,SAE9G,C,mECuBA,IA7BkB,WACd,IAAM6C,GAAWK,EAAAA,EAAAA,IAAY+D,EAAAA,IACvBtF,GAAWC,EAAAA,EAAAA,MAEXsF,EAAe,WACbC,OAAOC,YAAc,KACrBzF,GAAS0F,EAAAA,EAAAA,KAAY,IAErB1F,GAAS0F,EAAAA,EAAAA,KAAY,GAE7B,EAcF,OAXE1D,EAAAA,EAAAA,YAAU,WAKN,OAHAwD,OAAOG,iBAAiB,OAAQJ,GAChCC,OAAOG,iBAAiB,SAAUJ,GAE3B,WACHC,OAAOI,oBAAoB,OAAQL,GACnCC,OAAOI,oBAAoB,SAAUL,EACzC,CACJ,GAAG,IAEE,CACLrE,SAAAA,EAEJ,C","sources":["components/UserTab.js","components/Users.js","components/common/BackButton.js","hooks/useMobile.js"],"sourcesContent":["import React from 'react';\r\nimport ProfilePicture from './common/ProfilePicture';\r\nimport BlankProfilePicture from './common/BlankProfilePicture';\r\nimport { BsCircleFill } from 'react-icons/bs';\r\nimport IconContainer from './common/IconContainer';\r\n\r\nconst UserTab = ({user, onClick, additionalContent}) => {\r\n    const onlineStatusIcon = (user) => {\r\n        return <BsCircleFill className={user.online ? 'icon online-status green' : 'icon online-status grey'}/>\r\n    }\r\n\r\n    const checkProfileURL = (user) => {\r\n        return user.base64_img_data ? Buffer.from(user.base64_img_data) : user.img_url.toString();\r\n    }\r\n    \r\n  return (\r\n    <div className='user-tab' onClick={onClick}>\r\n        {user.base64_img_data || user.img_url\r\n            ? <ProfilePicture src={checkProfileURL(user)}/>\r\n            : <BlankProfilePicture/>\r\n        }\r\n        \r\n        <IconContainer title={user.online ? 'Online' : 'Offline'} icon={onlineStatusIcon(user)}/>\r\n\r\n        <div className='user-tab-content'>\r\n            <h4>{user.first_name} {user.last_name}</h4>\r\n            {user.header ? <p>{user.header}</p> : null}\r\n        </div>\r\n\r\n        <div id='userTabAdditionalContent'>{additionalContent ? additionalContent : null}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserTab;","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport BackButton from './common/BackButton';\r\nimport SearchBar from './common/SearchBar';\r\nimport { fetchMembersAsync, setMembers } from '../store/members/members.actions';\r\nimport Line from './common/Line';\r\nimport useAuth from '../hooks/useAuth';\r\nimport UserTab from './UserTab';\r\nimport { generateKey } from '../utils/keyGenerator';\r\nimport useProject from '../hooks/useProject';\r\nimport {BsChatLeftText, BsPlus, BsSearch} from \"react-icons/bs\";\r\nimport IconContainer from './common/IconContainer';\r\nimport { IoPersonCircleOutline } from 'react-icons/io5';\r\nimport useMobile from '../hooks/useMobile';\r\nimport { fetchChatAsync, setCurrentContact } from '../store/chat/chat.actions';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { selectChats } from '../store/chat/chat.selectors';\r\nimport useChat from '../hooks/useChat';\r\nimport { AiOutlineMinus } from 'react-icons/ai';\r\nimport useMembers from '../hooks/useMembers';\r\nimport useSocketEvents from '../hooks/useSocketEvents';\r\nimport { setTargetUser, setUserProfileOpen } from '../store/globalStates/globalStates.actions';\r\nimport { socket } from '../utils/socket';\r\n\r\nconst Users = () => {\r\n  const {members} = useMembers();\r\n  const {user, userInfo} = useAuth();\r\n  const dispatch = useDispatch();\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const {\r\n    currentProject,\r\n    handleAddMember,\r\n    handleRemoveMemberFromProject,\r\n    isAdmin\r\n  } = useProject();\r\n  const {isMobile} = useMobile();\r\n  const navigate = useNavigate();\r\n  const chats = useSelector(selectChats);\r\n  const {createNewChat, fetchUserChats} = useChat();\r\n\r\n  // Check search input\r\n  const checkSearchInput = (input) => {\r\n    if (members.some(member => member.first_name.toLowerCase().includes(input.toLowerCase()) ||\r\n      member.last_name.toLowerCase().includes(input.toLowerCase()))\r\n    ) {\r\n      const matchingUsers = [...members?.filter(member => member.first_name.toLowerCase().includes(input.toLowerCase()) ||\r\n      member.last_name.toLowerCase().includes(input.toLowerCase()))];\r\n      setSearchResults([...matchingUsers]);\r\n    }\r\n  }\r\n\r\n  // Handle input change\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  }\r\n\r\n  const handleViewProfile = (user) => {\r\n    // Set targetUser\r\n    dispatch(setTargetUser(user));\r\n\r\n    // Open user profile\r\n    dispatch(setUserProfileOpen(true));\r\n  }\r\n\r\n  // Handle start chat\r\n  const handleStartChat = (contactId) => {\r\n    \r\n    // Get contact and set to currentContact\r\n    const contact = members.find(m => m._id === contactId);\r\n    dispatch(setCurrentContact(contact));\r\n\r\n    // Check if chat exists\r\n    const chatExists = chats?.some(chat => chat.users.some(uid => uid === contactId));\r\n\r\n    // If not, create new chat\r\n    if (!chatExists) return createNewChat(userInfo?._id, contact);\r\n\r\n    // Start chat\r\n    dispatch(fetchChatAsync(userInfo?._id, contactId));\r\n    navigate(`/chat/${userInfo?._id}`);\r\n  }\r\n\r\n  // Check search input\r\n  useEffect(() => {\r\n    if (!inputValue.length) setSearchResults([]);\r\n    checkSearchInput(inputValue);\r\n  }, [inputValue]);\r\n\r\n  // Fetch all users and all current user's chats\r\n  useEffect(() => {\r\n    dispatch(fetchMembersAsync());\r\n    fetchUserChats();\r\n  }, []);\r\n\r\n\r\n  // Handle searchResults on Online event\r\n  const handleOnline = (data) => {\r\n    if (searchResults.length && searchResults.some(res => res._id === data.userId)) {\r\n      setSearchResults([...searchResults.map(searchRes => {\r\n        if (searchRes._id === data.userId) {\r\n          return {...searchRes, online: true};\r\n        } else return searchRes;\r\n      })])\r\n    }\r\n  }\r\n\r\n  // Handle searchResults on Offline event\r\n  const handleOffline = (data) => {\r\n    if (searchResults.length && searchResults.some(res => res._id === data.userId)) {\r\n      setSearchResults([...searchResults.map(searchRes => {\r\n        if (searchRes._id === data.userId) {\r\n          return {...searchRes, online: false};\r\n        } else return searchRes;\r\n      })])\r\n    }\r\n  }\r\n \r\n  // Listen to socket events\r\n  useSocketEvents({\r\n    events: {\r\n      online: handleOnline,\r\n      offline: handleOffline\r\n    }\r\n  });\r\n\r\n  const userAdditionalContent = (member) => <>\r\n    <div className='buttons-container'>\r\n\r\n      <button className='btn white' onClick={() => handleStartChat(member._id)} title={`Chat with ${member.first_name}`}>\r\n        <IconContainer icon={<BsChatLeftText className='icon'/>}/>\r\n        {isMobile ? '' : ' Message'}\r\n      </button>\r\n\r\n      <button className='btn white' onClick={() => handleViewProfile(member)} title={`View ${member.first_name}'s profile`}>\r\n        <IconContainer icon={<IoPersonCircleOutline className='icon xl'/>}/>\r\n        {isMobile ? '' : ' View profile'}\r\n      </button>\r\n\r\n      {currentProject?.members?.some(m => m._id === member._id)\r\n        && isAdmin\r\n        &&  <button className='btn white' title={`Remove ${member.first_name} from project`} onClick={() => handleRemoveMemberFromProject(member._id)}>\r\n              <IconContainer icon={<AiOutlineMinus className='icon'/>}/>{isMobile ? '' : ' Remove from project'}\r\n            </button>\r\n      }\r\n\r\n      {!currentProject?.members?.some(m => m._id === member._id)\r\n        && isAdmin\r\n        &&  <button className='btn white' title={`Add ${member.first_name} to project`} onClick={() => handleAddMember(member)}>\r\n              <IconContainer icon={<BsPlus className='icon xl'/>}/>{isMobile? '' : ' Add to project'}\r\n            </button>\r\n      }\r\n\r\n      </div>\r\n  </>\r\n\r\n  return (\r\n      <>\r\n        <div className='users-container'>\r\n\r\n          <BackButton/>\r\n\r\n          <div className='title'>\r\n            <h1>Users</h1>\r\n            <SearchBar\r\n              value={inputValue}\r\n              fn={handleInputChange}\r\n              placeholderText={\"Search users\"}\r\n              icon={<IconContainer icon={<BsSearch className='icon'/>}/>}\r\n            />\r\n          </div>\r\n\r\n            <div className='results-container'>\r\n              <p>{members?.filter(member => member._id !== user?._id).length} {members?.filter(member => member._id !== user?._id).length === 1 ? \"user found\": \"users found\"}</p>\r\n              <Line/>\r\n              <h3>Results</h3>\r\n              <div className='grid-container'>\r\n                {searchResults.length\r\n                  ? <>\r\n                      {searchResults?.filter(member => member._id !== user?._id).map(member => {\r\n                        return (\r\n                          <>\r\n                          <div key={generateKey()} className='search-result'>\r\n                            <UserTab user={member} onClick={() => handleViewProfile(member)} additionalContent={userAdditionalContent(member)}/>\r\n                          </div>\r\n                          </>\r\n                        )\r\n                      })}\r\n                    </>\r\n                  : members?.filter(m => m._id !== user?._id).map(member => {\r\n                    return (\r\n                      <div key={generateKey()} className='search-result'>\r\n                        <UserTab user={member} additionalContent={userAdditionalContent(member)}/>\r\n                        {/* <div className='buttons-container'>\r\n\r\n                          <button className='btn white' onClick={() => handleStartChat(member._id)} title={`Chat with ${member.first_name}`}>\r\n                            <IconContainer icon={<BsChatLeftText className='icon'/>}/>\r\n                            {isMobile ? '' : ' Message'}\r\n                          </button>\r\n\r\n                          <button className='btn white' onClick={() => handleViewProfile(member)} title={`View ${member.first_name}'s profile`}>\r\n                            <IconContainer icon={<IoPersonCircleOutline className='icon xl'/>}/>\r\n                            {isMobile ? '' : ' View profile'}\r\n                          </button>\r\n\r\n                          {currentProject?.members?.some(m => m._id === member._id)\r\n                            && isAdmin\r\n                            &&  <button className='btn white' title={`Remove ${member.first_name} from project`} onClick={() => handleRemoveMemberFromProject(member._id)}>\r\n                                  <IconContainer icon={<AiOutlineMinus className='icon'/>}/>{isMobile ? '' : ' Remove from project'}\r\n                                </button>\r\n                          }\r\n\r\n                          {!currentProject?.members?.some(m => m._id === member._id)\r\n                            && isAdmin\r\n                            &&  <button className='btn white' title={`Add ${member.first_name} to project`} onClick={() => handleAddMember(member)}>\r\n                                  <IconContainer icon={<BsPlus className='icon xl'/>}/>{isMobile? '' : ' Add to project'}\r\n                                </button>\r\n                          }\r\n                        </div> */}\r\n                      </div>\r\n                    )\r\n                  })\r\n                }\r\n              </div>\r\n              \r\n            </div>\r\n\r\n        </div>\r\n      </>\r\n  )\r\n}\r\n\r\nexport default Users;","import React from 'react';\r\nimport { BiChevronLeft } from \"react-icons/bi\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst BackButton = () => {\r\n  const navigate = useNavigate();\r\n  const handleClick = () => navigate(-1);\r\n  \r\n  return (\r\n    <button type='button' className='back-button link' onClick={handleClick}><BiChevronLeft className='icon'/>Back</button>\r\n  )\r\n}\r\n\r\nexport default BackButton;","import { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setIsMobile } from '../store/globalStates/globalStates.actions';\r\nimport { selectIsMobile } from '../store/globalStates/globalStates.selector';\r\n\r\nconst useMobile = () => {\r\n    const isMobile = useSelector(selectIsMobile);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleResize = () => {\r\n        if (window.innerWidth <= 1280) {\r\n            dispatch(setIsMobile(true));\r\n        } else {\r\n            dispatch(setIsMobile(false));\r\n        }\r\n    };\r\n\r\n   // Handle screen size\r\n    useEffect(() => {\r\n    \r\n        window.addEventListener('load', handleResize);\r\n        window.addEventListener('resize', handleResize);\r\n    \r\n        return () => {\r\n            window.removeEventListener('load', handleResize);\r\n            window.removeEventListener('resize', handleResize);\r\n        };\r\n    }, []);\r\n\r\n  return {\r\n    isMobile\r\n  }\r\n}\r\n\r\nexport default useMobile;"],"names":["_ref","user","onClick","additionalContent","_jsxs","className","children","base64_img_data","img_url","_jsx","ProfilePicture","src","Buffer","from","toString","checkProfileURL","BlankProfilePicture","IconContainer","title","online","icon","BsCircleFill","onlineStatusIcon","first_name","last_name","header","id","members","useMembers","_useAuth","useAuth","userInfo","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","inputValue","setInputValue","_useState3","_useState4","searchResults","setSearchResults","_useProject","useProject","currentProject","handleAddMember","handleRemoveMemberFromProject","isAdmin","isMobile","useMobile","navigate","useNavigate","chats","useSelector","selectChats","_useChat","useChat","createNewChat","fetchUserChats","handleViewProfile","setTargetUser","setUserProfileOpen","useEffect","length","input","some","member","toLowerCase","includes","matchingUsers","_toConsumableArray","filter","checkSearchInput","fetchMembersAsync","useSocketEvents","events","data","res","_id","userId","map","searchRes","_objectSpread","offline","userAdditionalContent","_currentProject$membe","_currentProject$membe2","_Fragment","contactId","contact","find","m","setCurrentContact","chat","users","uid","fetchChatAsync","concat","handleStartChat","BsChatLeftText","IoPersonCircleOutline","AiOutlineMinus","BsPlus","BackButton","SearchBar","value","fn","e","target","placeholderText","BsSearch","Line","UserTab","generateKey","type","BiChevronLeft","selectIsMobile","handleResize","window","innerWidth","setIsMobile","addEventListener","removeEventListener"],"sourceRoot":""}