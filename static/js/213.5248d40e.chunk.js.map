{"version":3,"file":"static/js/213.5248d40e.chunk.js","mappings":"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","sources":["components/ProjectAdmins.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport ProfilePicture from './common/ProfilePicture';\r\nimport IconContainer from './common/IconContainer';\r\nimport BlankProfilePicture from './common/BlankProfilePicture';\r\nimport useAuth from '../hooks/useAuth';\r\nimport useProject from '../hooks/useProject';\r\nimport { BsCircleFill } from 'react-icons/bs';\r\nimport { getUserByEmail } from '../httpRequests/http.members';\r\nimport { generateKey } from '../utils/keyGenerator';\r\nimport { socket } from '../utils/socket';\r\nimport Spinner from './common/Spinner';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setProjectAdmins } from '../store/project/project.actions';\r\nimport { setIsAdmin } from '../store/userInfo/userInfo.actions';\r\n\r\nconst ProjectAdmins = () => {\r\n    const {userInfo, user, userName} = useAuth();\r\n    const {\r\n        currentProject,\r\n        handleOpenAdminModal,\r\n        projectAdmins,\r\n        isAdmin\r\n    } = useProject();\r\n    const [admins, setAdmins] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    // Sockets\r\n    socket.on('online', (data) => {\r\n        if (admins.some(adm => adm._id === data.userId)) {\r\n            setAdmins([...admins.map(adm => {\r\n                if (adm._id === data.userId) {\r\n                    return {...adm, online: true};\r\n                } else return adm;\r\n            })])\r\n        }\r\n    })\r\n    \r\n    socket.on('offline', (data) => {\r\n        if (admins.some(adm => adm._id === data.userId)) {\r\n            setAdmins([...admins.map(adm => {\r\n                if (adm._id === data.userId) {\r\n                    return {...adm, online: false};\r\n                } else return adm;\r\n            })])\r\n        }\r\n    })\r\n\r\n    // Set online status\r\n    const onlineStatusIcon = (user) => {\r\n        return <BsCircleFill className={user.online ? 'icon online-status green' : 'icon online-status grey'}/>\r\n    }\r\n\r\n    // Check profile image\r\n    const checkProfileURL = (user) => {\r\n        return user.base64_img_data ? Buffer.from(user.base64_img_data) : user.img_url.toString();\r\n    }\r\n\r\n    // Get admins\r\n    const getAdmins = async () => {\r\n\r\n        setLoading(true);\r\n\r\n        const updatedAdmins = [];\r\n        \r\n        for (let i = 0; i < projectAdmins.length; i++) {\r\n            const adminObj = await getUserByEmail(projectAdmins[i]);\r\n\r\n            // Check if the admin is already in admins array\r\n            const isAlreadyInAdminsArray = admins.some(adm => adm.email === adminObj.email);\r\n            if (isAlreadyInAdminsArray) return setLoading(false);\r\n\r\n            // Add admin to array\r\n            updatedAdmins.push(adminObj);\r\n        }\r\n\r\n        // Update array\r\n        setAdmins(updatedAdmins);\r\n    }\r\n\r\n    // Handle Loading\r\n    useEffect(() => {\r\n        if (admins.length) return setLoading(false);\r\n    }, [admins]);\r\n\r\n    // Get admins\r\n    useEffect(() => {\r\n        if (!currentProject || !projectAdmins.length) return;\r\n\r\n        // Get admins\r\n        getAdmins();\r\n\r\n    }, [projectAdmins]);\r\n\r\n    // Check if user is an admin\r\n    useEffect(() => {\r\n        if (!projectAdmins.length) return;\r\n\r\n        // Check if user is in project's admins list\r\n        if (projectAdmins.includes(userInfo?.email)) {\r\n            dispatch(setIsAdmin(true));\r\n        }\r\n    }, [projectAdmins]);\r\n\r\n    useEffect(() => {\r\n\r\n        // Reset admins\r\n        if (!currentProject && (projectAdmins.length || admins.length)) {\r\n            dispatch(setProjectAdmins([]));\r\n            setAdmins([]);\r\n            return;\r\n        }\r\n\r\n        // Set admins\r\n        if (currentProject?.admins.length) dispatch(setProjectAdmins(currentProject.admins));\r\n\r\n    }, [currentProject]);\r\n\r\n    // Handle unload event\r\n    useEffect(() => {\r\n        const handleUnload = () => {\r\n          socket.emit('unload', { userId: userInfo?._id });\r\n        };\r\n      \r\n        window.addEventListener('beforeunload', handleUnload);\r\n      \r\n        return () => {\r\n          window.removeEventListener('beforeunload', handleUnload);\r\n        };\r\n      }, [userInfo]);\r\n\r\n  return (\r\n    <div className=\"current-project-admins\">\r\n        <span>BOARD ADMINS</span>\r\n        <div className=\"admins\">\r\n            {loading\r\n                ?   <div id='admins-spinner'><Spinner width={'30px'}/><h3>Loading...</h3></div>\r\n                :   <>\r\n                        {admins?.map(admin => {\r\n                            if (admin.email === user?.email) {\r\n                                return (\r\n                                    <div className=\"admin\" key={generateKey()}>\r\n                                        {admin.img_url || admin.base64_img_data\r\n                                        ? <>\r\n                                            <ProfilePicture src={checkProfileURL(userInfo)}/>\r\n                                            <IconContainer title={userInfo?.online ? 'Online' : 'Offline'} icon={onlineStatusIcon(userInfo)}/>\r\n                                        </>\r\n                                        : <BlankProfilePicture/>}\r\n                                        <span>{userName} (You)</span>\r\n                                    </div>\r\n                                )\r\n                            } else return (\r\n                                <div className=\"admin\" key={generateKey()}>\r\n                                    {admin.img_url || admin.base64_img_data\r\n                                    ? <>\r\n                                        <ProfilePicture src={checkProfileURL(admin)}/>\r\n                                        <IconContainer title={admin.online ? 'Online' : 'Offline'} icon={onlineStatusIcon(admin)}/>\r\n                                    </>\r\n                                    : <>\r\n                                        <BlankProfilePicture/>\r\n                                        <IconContainer title={admin.online ? 'Online' : 'Offline'} icon={onlineStatusIcon(admin)}/>\r\n                                    </>}\r\n                                    <span>{admin.first_name} {admin.last_name}</span>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </>\r\n            }\r\n        </div>\r\n        {isAdmin ? <button className='btn link' onClick={handleOpenAdminModal}>I'm an admin</button> : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectAdmins;"],"names":["_useAuth","useAuth","userInfo","user","userName","_useProject","useProject","currentProject","handleOpenAdminModal","projectAdmins","isAdmin","_useState","useState","_useState2","_slicedToArray","admins","setAdmins","_useState3","_useState4","loading","setLoading","dispatch","useDispatch","socket","data","some","adm","_id","userId","_toConsumableArray","map","_objectSpread","online","onlineStatusIcon","_jsx","BsCircleFill","className","checkProfileURL","base64_img_data","Buffer","from","img_url","toString","getAdmins","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","updatedAdmins","_loop","i","_ret","wrap","_context2","prev","next","adminObj","_context","getUserByEmail","sent","email","abrupt","v","push","stop","length","delegateYield","t0","apply","arguments","useEffect","includes","setIsAdmin","setProjectAdmins","handleUnload","window","addEventListener","removeEventListener","_jsxs","children","id","Spinner","width","_Fragment","admin","ProfilePicture","src","IconContainer","title","icon","BlankProfilePicture","generateKey","first_name","last_name","onClick"],"sourceRoot":""}