{"version":3,"file":"static/js/792.2125e696.chunk.js","mappings":"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","sources":["components/dashboard/ProjectAdmins.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport ProfilePicture from '../common/ProfilePicture';\r\nimport IconContainer from '../common/IconContainer';\r\nimport BlankProfilePicture from '../common/BlankProfilePicture';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport useProject from '../../hooks/useProject';\r\nimport { BsCircleFill } from 'react-icons/bs';\r\nimport { getUserByEmail } from '../../services/api/http.members';\r\nimport { generateKey } from '../../utils/keyGenerator';\r\nimport Spinner from '../common/Spinner';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setCurrentProject, setProjectAdmins } from '../../store/project/project.actions';\r\nimport { setIsAdmin } from '../../store/userInfo/userInfo.actions';\r\nimport useSocketEvents from '../../hooks/useSocketEvents';\r\n\r\nconst ProjectAdmins = () => {\r\n    const {userInfo, userName} = useAuth();\r\n    const {\r\n        currentProject,\r\n        handleOpenAdminModal,\r\n        projectAdmins,\r\n        isAdmin\r\n    } = useProject();\r\n    const [admins, setAdmins] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    // Sockets\r\n\r\n    // Handle online event\r\n    const handleOnline = (data) => {\r\n        if (admins.some(adm => adm._id === data.userId)) {\r\n            setAdmins([...admins.map(adm => {\r\n                if (adm._id === data.userId) {\r\n                    return {...adm, online: true};\r\n                } else return adm;\r\n            })])\r\n        }\r\n    }\r\n    \r\n    // Handle offline event\r\n    const handleOffline = (data) => {\r\n        if (admins.some(adm => adm._id === data.userId)) {\r\n            setAdmins([...admins.map(adm => {\r\n                if (adm._id === data.userId) {\r\n                    return {...adm, online: false};\r\n                } else return adm;\r\n            })])\r\n        }\r\n    }\r\n\r\n    // Listen to socket events\r\n    useSocketEvents({\r\n        events: {\r\n            online: handleOnline,\r\n            offline: handleOffline\r\n        }\r\n    });\r\n\r\n    // Set online status\r\n    const onlineStatusIcon = (user) => {\r\n        return <BsCircleFill className={user.online === true ? 'icon online-status green' : 'icon online-status grey'}/>\r\n    }\r\n\r\n    // Check profile image\r\n    const checkProfileURL = (user) => {\r\n        return user.base64_img_data ? Buffer.from(user.base64_img_data) : user.img_url.toString();\r\n    }\r\n\r\n    // Remove admin access\r\n    const handleRemoveAdminAccess = (userEmail) => {\r\n        dispatch(setCurrentProject({\r\n            ...currentProject,\r\n            admins: [...currentProject.admins.filter(admEmail => admEmail !== userEmail)]\r\n        }));\r\n    }\r\n\r\n    // Get admins\r\n    const getAdmins = async () => {\r\n\r\n        setLoading(true);\r\n\r\n        const updatedAdmins = [];\r\n        \r\n        for (let i = 0; i < projectAdmins.length; i++) {\r\n            const adminObj = await getUserByEmail(projectAdmins[i]);\r\n\r\n            // Check if the admin is already in admins array\r\n            const isAlreadyInAdminsArray = admins.some(adm => adm.email === adminObj.email);\r\n            if (isAlreadyInAdminsArray) return setLoading(false);\r\n\r\n            // Add admin to array\r\n            updatedAdmins.push(adminObj);\r\n        }\r\n\r\n        // Update array\r\n        setAdmins(updatedAdmins);\r\n    }\r\n\r\n    // Handle Loading\r\n    useEffect(() => {\r\n        if (admins.length) return setLoading(false);\r\n    }, [admins]);\r\n\r\n    // Get admins\r\n    useEffect(() => {\r\n        if (!currentProject || !projectAdmins.length) return;\r\n\r\n        // Get admins\r\n        getAdmins();\r\n\r\n    }, [projectAdmins]);\r\n\r\n    // Check if user is an admin\r\n    useEffect(() => {\r\n        if (!projectAdmins.length) return;\r\n\r\n        // Check if user is in project's admins list\r\n        if (projectAdmins.includes(userInfo?.email)) {\r\n            dispatch(setIsAdmin(true));\r\n        }\r\n\r\n    }, [projectAdmins]);\r\n\r\n    // Set/reset project admins\r\n    useEffect(() => {\r\n\r\n        // Reset admins\r\n        if ((!currentProject && (projectAdmins.length || admins.length)) || !currentProject?.admins.length) {\r\n            dispatch(setProjectAdmins([]));\r\n            setAdmins([]);\r\n            return;\r\n        }\r\n\r\n        // Set admins\r\n        if (currentProject?.admins.length) {\r\n            dispatch(setProjectAdmins(currentProject.admins));\r\n        }\r\n\r\n    }, [currentProject]);\r\n\r\n    // useEffect(() => {\r\n    //     console.log(isAdmin)\r\n    // }, [isAdmin])\r\n\r\n  return (\r\n    <div className=\"current-project-admins\">\r\n        <div className='flex-align space-between'>\r\n            <span>PROJECT ADMINS</span>\r\n            {!isAdmin\r\n                ? <button className='btn link text-blue no-scale' onClick={handleOpenAdminModal}>Get admin access</button>\r\n                : <button className='btn link text-blue no-scale' onClick={() => handleRemoveAdminAccess(userInfo?.email)}>Remove admin access</button>\r\n            }\r\n        </div>\r\n        <div className=\"admins\">\r\n            {loading\r\n                ?   <div id='admins-spinner'><Spinner width={'30px'}/><h3>Loading...</h3></div>\r\n                :   <>\r\n                        {admins?.map(admin => {\r\n                            if (admin.email === userInfo?.email) {\r\n                                return (\r\n                                    <div className=\"admin\" key={generateKey()}>\r\n                                        {admin.img_url || admin.base64_img_data\r\n                                            ?   <>\r\n                                                    <ProfilePicture src={checkProfileURL(userInfo)}/>\r\n                                                    <IconContainer title={userInfo?.online ? 'Online' : 'Offline'} icon={onlineStatusIcon(userInfo)}/>\r\n                                                </>\r\n                                            :   <>\r\n                                                    <BlankProfilePicture/>\r\n                                                    <IconContainer title={userInfo?.online ? 'Online' : 'Offline'} icon={onlineStatusIcon(userInfo)}/>\r\n                                                </>\r\n                                        }\r\n                                        <span>{userName} (You)</span>\r\n                                    </div>\r\n                                )\r\n                            } else return (\r\n                                <div className=\"admin\" key={generateKey()}>\r\n                                    {admin.img_url || admin.base64_img_data\r\n                                        ?   <>\r\n                                                <ProfilePicture src={checkProfileURL(admin)}/>\r\n                                                <IconContainer title={admin.online ? 'Online' : 'Offline'} icon={onlineStatusIcon(admin)}/>\r\n                                            </>\r\n                                        :   <>\r\n                                                <BlankProfilePicture/>\r\n                                                <IconContainer title={admin.online ? 'Online' : 'Offline'} icon={onlineStatusIcon(admin)}/>\r\n                                            </>\r\n                                    }\r\n                                    <span>{admin.first_name} {admin.last_name}</span>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </>\r\n            }\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectAdmins;"],"names":["_useAuth","useAuth","userInfo","userName","_useProject","useProject","currentProject","handleOpenAdminModal","projectAdmins","isAdmin","_useState","useState","_useState2","_slicedToArray","admins","setAdmins","_useState3","_useState4","loading","setLoading","dispatch","useDispatch","useSocketEvents","events","online","data","some","adm","_id","userId","_toConsumableArray","map","_objectSpread","offline","onlineStatusIcon","user","_jsx","BsCircleFill","className","checkProfileURL","base64_img_data","Buffer","from","img_url","toString","getAdmins","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","updatedAdmins","_loop","i","_ret","wrap","_context2","prev","next","adminObj","_context","getUserByEmail","sent","email","abrupt","v","push","stop","length","delegateYield","t0","apply","arguments","useEffect","includes","setIsAdmin","setProjectAdmins","_jsxs","children","onClick","userEmail","setCurrentProject","filter","admEmail","id","Spinner","width","_Fragment","admin","ProfilePicture","src","IconContainer","title","icon","BlankProfilePicture","generateKey","first_name","last_name"],"sourceRoot":""}