{"version":3,"file":"static/js/321.6f998997.chunk.js","mappings":"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","sources":["components/common/BackButton.js","assets/small_spinner.svg","components/common/ButtonSpinner.js","components/pages/auth/Login.js"],"sourcesContent":["import React from 'react';\r\nimport { BiChevronLeft } from \"react-icons/bi\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst BackButton = () => {\r\n  const navigate = useNavigate();\r\n  const handleClick = () => navigate(-1);\r\n  \r\n  return (\r\n    <button type='button' className='back-button link' onClick={handleClick}><BiChevronLeft className='icon'/>Back</button>\r\n  )\r\n}\r\n\r\nexport default BackButton;","var _circle;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgSmallSpinner(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    style: {\n      margin: \"auto\",\n      background: \"none\",\n      display: \"block\",\n      shapeRendering: \"auto\"\n    },\n    width: \"200px\",\n    height: \"200px\",\n    viewBox: \"0 0 100 100\",\n    preserveAspectRatio: \"xMidYMid\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 50,\n    cy: 50,\n    fill: \"none\",\n    stroke: \"#dadada\",\n    strokeWidth: 5,\n    r: 42,\n    strokeDasharray: \"197.92033717615698 67.97344572538566\"\n  }, /*#__PURE__*/React.createElement(\"animateTransform\", {\n    attributeName: \"transform\",\n    type: \"rotate\",\n    repeatCount: \"indefinite\",\n    dur: \"1s\",\n    values: \"0 50 50;360 50 50\",\n    keyTimes: \"0;1\"\n  }))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSmallSpinner);\nexport default __webpack_public_path__ + \"static/media/small_spinner.6a57de156310fc958e15b73dd3e6bcc4.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\nimport Loader from \"../../assets/small_spinner.svg\";\r\n\r\nconst ButtonSpinner = ({spinnerWidth}) => {\r\n  return (\r\n    <div className='spinner-container small'>\r\n        <img src={Loader} alt=\"loading\" width={spinnerWidth ? spinnerWidth : null}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ButtonSpinner;","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport BackButton from \"../../common/BackButton\";\r\nimport Input from \"../../common/Input\";\r\nimport {BsShieldCheck} from \"react-icons/bs\";\r\nimport {FcGoogle} from \"react-icons/fc\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setUser } from \"../../../store/auth/auth.actions\";\r\nimport useAuth from \"../../../hooks/useAuth\";\r\nimport { selectAuth } from \"../../../store/auth/auth.selector\";\r\nimport ButtonSpinner from \"../../common/ButtonSpinner\";\r\nimport { ERROR_MESSAGES } from \"../../../utils/errors\";\r\nimport useProject from \"../../../hooks/useProject\";\r\n\r\nconst defaultLoginFormValues = {\r\n    email: \"\",\r\n    password: \"\"\r\n}\r\n\r\nconst Login = () => {\r\n    const [formValues, setFormValues] = useState(defaultLoginFormValues);\r\n    const {email, password} = formValues;\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const {login, googleSignIn, user, isAuthenticated} = useAuth();\r\n    const {isLoading} = useSelector(selectAuth);\r\n    const {showError} = useProject();\r\n\r\n    const handleFormSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!email || !password) {\r\n            showError(ERROR_MESSAGES.MISSING_EMAIL_OR_PASSWORD);\r\n            return;\r\n        }\r\n        \r\n        return login(formValues);\r\n    }\r\n\r\n    const resetFormValues = () => setFormValues(defaultLoginFormValues);\r\n    \r\n    const handleInputChange = (e) => {\r\n       return setFormValues({...formValues,\r\n        [e.target.name]: e.target.value ? e.target.value: formValues[e.target.name].value});\r\n    }\r\n\r\n    const handleGoogleSignIn = async () => {\r\n        const user = await googleSignIn();\r\n        dispatch(setUser(user));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (user && isAuthenticated) {\r\n            resetFormValues();\r\n            navigate(\"/\");\r\n        }\r\n    }, [user, isAuthenticated])\r\n\r\n  return (\r\n    <>\r\n    <BackButton/>\r\n    <div className=\"form-container\">\r\n        <form onSubmit={handleFormSubmit}>\r\n            <h2>Sign in</h2>\r\n\r\n            <div className=\"form-inputs-container\">\r\n                <Input\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    onChange={handleInputChange}\r\n                    value={email}\r\n                    text=\"Email\"\r\n                    placeholderText=\"Email\"\r\n                />\r\n        \r\n                <Input\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    onChange={handleInputChange}\r\n                    value={password}\r\n                    text=\"Password\"\r\n                    placeholderText=\"Password\"\r\n                />\r\n               \r\n                <div className=\"buttons-container\">\r\n                    <button type=\"submit\" className={isLoading ? \"btn spinner form\" : \"btn form\"}>\r\n                        {isLoading ? <ButtonSpinner/> : <><BsShieldCheck className=\"icon\"/>Sign in</>}\r\n                    </button>\r\n                    <p>OR</p>\r\n                    <button type=\"button\" className=\"btn form white\" onClick={handleGoogleSignIn}>\r\n                        <FcGoogle className=\"icon\"/>Continue with Google\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <p>Not registered? <Link to=\"/sign-up\" className=\"link blue\">Register now</Link></p>\r\n        </form>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Login;"],"names":["navigate","useNavigate","_jsxs","type","className","onClick","children","_jsx","BiChevronLeft","_ref","spinnerWidth","src","Loader","alt","width","defaultLoginFormValues","email","password","_useState","useState","_useState2","_slicedToArray","formValues","setFormValues","dispatch","useDispatch","_useAuth","useAuth","login","googleSignIn","user","isAuthenticated","isLoading","useSelector","selectAuth","showError","useProject","handleFormSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","wrap","_context","prev","next","preventDefault","ERROR_MESSAGES","abrupt","stop","_x","apply","arguments","handleInputChange","_objectSpread","_defineProperty","target","name","value","handleGoogleSignIn","_ref2","_callee2","_context2","sent","setUser","useEffect","_Fragment","BackButton","onSubmit","Input","id","onChange","text","placeholderText","ButtonSpinner","BsShieldCheck","FcGoogle","Link","to"],"sourceRoot":""}