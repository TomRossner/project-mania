{"version":3,"file":"static/js/710.4df94c32.chunk.js","mappings":"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","sources":["components/Activity.js","components/ProjectAdmins.js","components/ActivitySection.js","hooks/useMobile.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport BlankProfilePicture from './common/BlankProfilePicture';\r\nimport useProject from '../hooks/useProject';\r\nimport { format_AM_PM, format_date } from '../utils/timeFormats';\r\nimport { generateKey } from '../utils/keyGenerator';\r\nimport IconContainer from './common/IconContainer';\r\nimport { MdHistory } from 'react-icons/md';\r\n\r\nconst Activity = () => {\r\n  const {currentProject} = useProject();\r\n  const bottomRef = useRef(null);\r\n\r\n  // Scroll to last activity\r\n  const scrollToBottom = () => {\r\n    bottomRef.current?.scrollIntoView();\r\n}\r\n\r\n  // Scroll to last activity\r\n  useEffect(() => {\r\n    if (!currentProject?.activity?.length) return;\r\n      scrollToBottom();\r\n  }, [currentProject]);\r\n\r\n  return (\r\n    <div className=\"activity-container\">\r\n        <div className='title-with-icon'>\r\n          <IconContainer icon={<MdHistory className='icon xl blue'/>}/>  \r\n          <h3>Recent Activity</h3>\r\n        </div>\r\n        <div className='timeline'>\r\n            <div className='dashed-line'></div>\r\n            <div className='activities'>\r\n              {currentProject?.activity?.map(act => {\r\n                return (\r\n                  <div key={generateKey()} className='activity'>\r\n                    <div className='activity-text'>\r\n                      {act.created_by.image\r\n                      ? <div className='profile-img-container'><img src={Buffer.from(act.created_by.image) || act.created_by.image.toString()} alt=\"profile\"/></div>\r\n                      : <BlankProfilePicture/>}\r\n                      <p><span>{act.created_by.user_name}</span> {act.text}</p>\r\n                    </div>\r\n                    <span className='activity-time'>{format_date(act.created_at)} - {format_AM_PM(act.created_at)}</span>\r\n                  </div>\r\n                )\r\n              })}\r\n              <div ref={bottomRef}></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Activity;","import React, { useEffect, useState } from 'react';\r\nimport ProfilePicture from './common/ProfilePicture';\r\nimport IconContainer from './common/IconContainer';\r\nimport BlankProfilePicture from './common/BlankProfilePicture';\r\nimport useAuth from '../hooks/useAuth';\r\nimport useProject from '../hooks/useProject';\r\nimport { BsCircleFill } from 'react-icons/bs';\r\nimport { getUserByEmail } from '../httpRequests/http.members';\r\nimport { generateKey } from '../utils/keyGenerator';\r\nimport { socket } from '../utils/socket';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setCurrentProject } from '../store/project/project.actions';\r\n\r\nconst ProjectAdmins = () => {\r\n    const {userInfo, user, userName} = useAuth();\r\n    const {currentProject, handleOpenAdminModal} = useProject();\r\n    const [adminEmails, setAdminEmails] = useState([]);\r\n    const [admins, setAdmins] = useState([]);\r\n    const dispatch = useDispatch();\r\n\r\n    socket.on('online', (data) => {\r\n        if (admins.some(adm => adm._id === data.userId)) {\r\n            setAdmins([...admins.map(adm => {\r\n                if (adm._id === data.userId) {\r\n                    return {...adm, online: true};\r\n                } else return adm;\r\n            })])\r\n        }\r\n    })\r\n    \r\n    socket.on('offline', (data) => {\r\n        if (admins.some(adm => adm._id === data.userId)) {\r\n            setAdmins([...admins.map(adm => {\r\n                if (adm._id === data.userId) {\r\n                    return {...adm, online: false};\r\n                } else return adm;\r\n            })])\r\n        }\r\n    })\r\n\r\n    const onlineStatusIcon = (user) => {\r\n        return <BsCircleFill className={user.online ? 'icon online-status green' : 'icon online-status grey'}/>\r\n    }\r\n\r\n    const checkProfileURL = (user) => {\r\n        return user.base64_img_data ? Buffer.from(user.base64_img_data) : user.img_url.toString();\r\n    }\r\n\r\n    const getAdmins = async () => {\r\n        const updatedAdmins = [];\r\n        \r\n        for (let i = 0; i < adminEmails.length; i++) {\r\n            const adminObj = await getUserByEmail(adminEmails[i]);\r\n\r\n            // Check if the admin is already in admins array\r\n            const isAlreadyInAdminsArray = admins.some(adm => adm.email === adminObj.email);\r\n            if (isAlreadyInAdminsArray) return;\r\n\r\n            // Add admin to array\r\n            updatedAdmins.push(adminObj);\r\n        }\r\n\r\n        // Update array\r\n        setAdmins(updatedAdmins);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (!currentProject || !adminEmails.length) return;\r\n\r\n        // Get admins\r\n        getAdmins();\r\n\r\n    }, [adminEmails, currentProject]);\r\n\r\n    useEffect(() => {\r\n\r\n        // Reset admins\r\n        if (!currentProject && (adminEmails.length || admins.length)) {\r\n            setAdminEmails([]);\r\n            setAdmins([]);\r\n            return;\r\n        }\r\n\r\n        // Set admins\r\n        if (currentProject?.admins.length) setAdminEmails(currentProject.admins);\r\n\r\n    }, [currentProject]);\r\n\r\n    useEffect(() => {\r\n        const handleUnload = () => {\r\n          socket.emit('unload', { userId: userInfo?._id });\r\n        };\r\n      \r\n        window.addEventListener('beforeunload', handleUnload);\r\n      \r\n        return () => {\r\n          window.removeEventListener('beforeunload', handleUnload);\r\n        };\r\n      }, [userInfo?._id]);\r\n\r\n  return (\r\n    <div className=\"current-project-admins\">\r\n        <span>BOARD ADMINS</span>\r\n        <div className=\"admins\">\r\n            {admins?.length ? admins?.map(admin => {\r\n                if (admin.email === user?.email) {\r\n                    return (\r\n                        <div className=\"admin\" key={generateKey()}>\r\n                            {admin.img_url || admin.base64_img_data\r\n                            ? <>\r\n                                <ProfilePicture src={checkProfileURL(userInfo)}/>\r\n                                <IconContainer title={userInfo?.online ? 'Online' : 'Offline'} icon={onlineStatusIcon(userInfo)}/>\r\n                              </>\r\n                            : <BlankProfilePicture/>}\r\n                            <span>{userName} (You)</span>\r\n                        </div>\r\n                    )\r\n                } else return (\r\n                    <div className=\"admin\" key={generateKey()}>\r\n                        {admin.img_url || admin.base64_img_data\r\n                        ? <>\r\n                            <ProfilePicture src={checkProfileURL(admin)}/>\r\n                            <IconContainer title={admin.online ? 'Online' : 'Offline'} icon={onlineStatusIcon(admin)}/>\r\n                          </>\r\n                        : <>\r\n                            <BlankProfilePicture/>\r\n                            <IconContainer title={admin.online ? 'Online' : 'Offline'} icon={onlineStatusIcon(admin)}/>\r\n                          </>}\r\n                        <span>{admin.first_name} {admin.last_name}</span>\r\n                    </div>\r\n                )\r\n            }) : null}\r\n        </div>\r\n        <button className='btn link' onClick={handleOpenAdminModal}>I'm an admin</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectAdmins;","import React, { useEffect } from 'react';\r\nimport Activity from './Activity';\r\nimport useProject from '../hooks/useProject';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setActivity } from '../store/project/project.actions';\r\nimport ProjectAdmins from './ProjectAdmins';\r\nimport { selectActivitySectionOpen } from '../store/globalStates/globalStates.selector';\r\nimport IconContainer from './common/IconContainer';\r\nimport { setActivitySectionOpen } from '../store/globalStates/globalStates.actions';\r\nimport { BsChevronLeft } from 'react-icons/bs';\r\nimport useMobile from '../hooks/useMobile';\r\n\r\nconst ActivitySection = () => {\r\n    const {currentProject} = useProject();\r\n    const dispatch = useDispatch();\r\n    const activitySectionOpen = useSelector(selectActivitySectionOpen);\r\n    const {isMobile} = useMobile();\r\n\r\n    const handleToggleActivitySection = () => {\r\n      dispatch(setActivitySectionOpen(!activitySectionOpen));\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n      // Set activity\r\n      dispatch(setActivity(currentProject.activity));\r\n\r\n    }, [currentProject])\r\n\r\n  return (\r\n    <>\r\n    {isMobile\r\n      ? <>\r\n          {currentProject && (\r\n            <nav id=\"activity-section-mobile\" className={activitySectionOpen ? 'open' : ''}>\r\n                <IconContainer additionalClass={activitySectionOpen ? 'toggle-collapse rotate' : 'toggle-collapse'} icon={<BsChevronLeft className='icon'/>} onClick={handleToggleActivitySection}/>\r\n                <div className=\"right-nav-content\">\r\n\r\n                <div className=\"project-content\">\r\n                    <div className=\"current-project-info\">\r\n                      <h3>{currentProject?.title}</h3>\r\n                      <p>{currentProject?.subtitle}</p>\r\n                    </div>\r\n                    <ProjectAdmins/>\r\n                </div>\r\n\r\n                <div className='activity-section'>\r\n                  <Activity/>\r\n                </div>\r\n\r\n                </div>\r\n              </nav>\r\n            )}\r\n        </>\r\n      : <>\r\n          {currentProject && (\r\n          <nav id=\"right-nav\" className={activitySectionOpen ? 'open' : ''}>\r\n            <div className=\"right-nav-content\">\r\n\r\n            <div className=\"project-content\">\r\n                <div className=\"current-project-info\">\r\n                  <h3>{currentProject?.title}</h3>\r\n                  <p>{currentProject?.subtitle}</p>\r\n                </div>\r\n                <ProjectAdmins/>\r\n            </div>\r\n\r\n            <div className='activity-section'>\r\n              <Activity/>\r\n            </div>\r\n\r\n            </div>\r\n          </nav>\r\n        )}\r\n        </>\r\n    }\r\n    \r\n    </>\r\n  )\r\n}\r\n\r\nexport default ActivitySection;","import { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setIsMobile } from '../store/globalStates/globalStates.actions';\r\nimport { selectIsMobile } from '../store/globalStates/globalStates.selector';\r\n\r\nconst useMobile = () => {\r\n    const isMobile = useSelector(selectIsMobile);\r\n    const dispatch = useDispatch();\r\n\r\n   // Handle Screen size\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            if (window.innerWidth < 1441) {\r\n                dispatch(setIsMobile(true));\r\n            } else {\r\n                dispatch(setIsMobile(false));\r\n            }\r\n        };\r\n    \r\n        window.addEventListener('resize', handleResize);\r\n        window.addEventListener('load', handleResize);\r\n    \r\n        return () => {\r\n            window.removeEventListener('resize', handleResize);\r\n            window.removeEventListener('load', handleResize);\r\n        };\r\n    }, []);\r\n\r\n  return {\r\n    isMobile\r\n  }\r\n}\r\n\r\nexport default useMobile;"],"names":["_currentProject$activ2","currentProject","useProject","bottomRef","useRef","useEffect","_currentProject$activ","activity","length","_bottomRef$current","current","scrollIntoView","scrollToBottom","_jsxs","className","children","_jsx","IconContainer","icon","MdHistory","map","act","created_by","image","src","Buffer","from","toString","alt","BlankProfilePicture","user_name","text","format_date","created_at","format_AM_PM","generateKey","ref","_useAuth","useAuth","userInfo","user","userName","_useProject","handleOpenAdminModal","_useState","useState","_useState2","_slicedToArray","adminEmails","setAdminEmails","_useState3","_useState4","admins","setAdmins","useDispatch","socket","data","some","adm","_id","userId","_toConsumableArray","_objectSpread","online","onlineStatusIcon","BsCircleFill","checkProfileURL","base64_img_data","img_url","getAdmins","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","updatedAdmins","_loop","i","_ret","wrap","_context2","prev","next","adminObj","_context","getUserByEmail","sent","email","abrupt","v","push","stop","delegateYield","t0","apply","arguments","handleUnload","window","addEventListener","removeEventListener","admin","_Fragment","ProfilePicture","title","first_name","last_name","onClick","dispatch","activitySectionOpen","useSelector","selectActivitySectionOpen","isMobile","useMobile","setActivity","id","additionalClass","BsChevronLeft","setActivitySectionOpen","subtitle","ProjectAdmins","Activity","selectIsMobile","handleResize","innerWidth","setIsMobile"],"sourceRoot":""}