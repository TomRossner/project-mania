{"version":3,"file":"static/js/168.b362f91b.chunk.js","mappings":"0PAqBA,EAfiB,WACb,IAAMA,GAAWC,EAAAA,EAAAA,MAOnB,OACEC,EAAAA,EAAAA,KAAA,UAAQC,UAAU,iBAAiBC,QANX,WAEpBJ,GAASK,EAAAA,EAAAA,KAAW,GACxB,EAG4DC,UACxDJ,EAAAA,EAAAA,KAACK,EAAAA,EAAa,CAACC,MAAMN,EAAAA,EAAAA,KAACO,EAAAA,IAAM,CAACN,UAAU,iBAG/C,E,UC2BA,EArCe,SAAHO,GAA0D,IAArDC,EAAiBD,EAAjBC,kBAEfC,GAF6DF,EAA3BG,6BAEQC,EAAAA,EAAAA,MAAnCC,EAAQH,EAARG,SAAUC,EAAeJ,EAAfI,gBAAiBC,EAAIL,EAAJK,KAC3BC,GAAYC,EAAAA,EAAAA,KAAZD,SASP,OACEE,EAAAA,EAAAA,MAAA,OAAKjB,UAAU,UAASG,SAAA,CACnBY,GAAWhB,EAAAA,EAAAA,KAACmB,EAAQ,IAAK,KACzBJ,GAAQD,GACLI,EAAAA,EAAAA,MAAA,MAAAd,SAAA,CAAI,8BAA0B,OAARS,QAAQ,IAARA,OAAQ,EAARA,EAAUO,eAChCpB,EAAAA,EAAAA,KAAA,MAAAI,SAAI,8BAGRJ,EAAAA,EAAAA,KAACqB,EAAAA,EAAK,IACLN,GAAQD,GACLd,EAAAA,EAAAA,KAAAsB,EAAAA,SAAA,CAAAlB,UACEJ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBG,UAChCc,EAAAA,EAAAA,MAAA,UAAQjB,UAAU,WAAWC,QAASO,EAAkBL,SAAA,EAACJ,EAAAA,EAAAA,KAACK,EAAAA,EAAa,CAACC,MAAMN,EAAAA,EAAAA,KAACuB,EAAAA,IAAM,CAACtB,UAAU,WAAYe,EAAW,YAAc,0BAOzI,OAIZ,C,mECXA,IA5BkB,WACd,IAAMA,GAAWQ,EAAAA,EAAAA,IAAYC,EAAAA,IACvB3B,GAAWC,EAAAA,EAAAA,MAqBnB,OAlBE2B,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAe,WACbC,OAAOC,WAAa,KACpB/B,GAASgC,EAAAA,EAAAA,KAAY,IAErBhC,GAASgC,EAAAA,EAAAA,KAAY,GAE7B,EAKA,OAHAF,OAAOG,iBAAiB,SAAUJ,GAClCC,OAAOG,iBAAiB,OAAQJ,GAEzB,WACHC,OAAOI,oBAAoB,SAAUL,GACrCC,OAAOI,oBAAoB,OAAQL,EACvC,CACJ,GAAG,IAEE,CACLX,SAAAA,EAEJ,C","sources":["components/MenuIcon.js","components/TopNav.js","hooks/useMobile.js"],"sourcesContent":["import React from 'react';\r\nimport IconContainer from './common/IconContainer';\r\nimport { MdMenu } from 'react-icons/md';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setNavOpen } from '../store/globalStates/globalStates.actions';\r\n\r\nconst MenuIcon = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleMenuClick = () => {\r\n        // Open nav\r\n        dispatch(setNavOpen(true));\r\n    }\r\n\r\n  return (\r\n    <button className='btn white menu' onClick={handleMenuClick}>\r\n        <IconContainer icon={<MdMenu className='icon menu'/>}/>\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default MenuIcon;","import React, { useState } from 'react';\r\nimport IconContainer from './common/IconContainer';\r\nimport { BsPlus, BsBell } from 'react-icons/bs';\r\nimport Space from './common/Space';\r\n// import {BsFillCircleFill} from \"react-icons/bs\";\r\nimport useAuth from '../hooks/useAuth';\r\nimport MenuIcon from './MenuIcon';\r\nimport useMobile from '../hooks/useMobile';\r\n\r\nconst TopNav = ({handleCreateBoard, handleToggleNotificationTab}) => {\r\n  // const [notifications, setNotifications] = useState([]);\r\n  const {userInfo, isAuthenticated, user} = useAuth();\r\n  const {isMobile} = useMobile();\r\n\r\n  // useEffect(() => {\r\n  //   if (!userInfo) return;\r\n  //   setNotifications(userInfo.notifications);\r\n  // }, [userInfo]);\r\n\r\n  // TOP NAV DOESN'T LOAD ON MOBILE -- FIX ASAP\r\n\r\n  return (\r\n    <div className=\"top-nav\">\r\n        {isMobile ? <MenuIcon/> : null}\r\n        {user && isAuthenticated\r\n          ? <h1>ðŸ‘‹ Welcome back, {userInfo?.first_name}</h1>\r\n          : <h1>Welcome to ProjectMania!</h1>\r\n        }\r\n        \r\n        <Space/>\r\n        {user && isAuthenticated\r\n          ? <>\r\n              <div className='buttons-container'>\r\n                <button className=\"btn blue\" onClick={handleCreateBoard}><IconContainer icon={<BsPlus className='icon'/>}/>{isMobile ? 'New Board' : 'Create New Board'}</button>\r\n                {/* <button className=\"btn white\" onClick={handleToggleNotificationTab}>\r\n                  <IconContainer icon={<BsBell className='icon large'/>}/>\r\n                  {notifications?.length ? <IconContainer additionalClass={\"absolute\"} icon={<BsFillCircleFill className='icon'/>}/> : null}\r\n                </button> */}\r\n              </div>\r\n            </>\r\n          : null\r\n        }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TopNav;","import { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setIsMobile } from '../store/globalStates/globalStates.actions';\r\nimport { selectIsMobile } from '../store/globalStates/globalStates.selector';\r\n\r\nconst useMobile = () => {\r\n    const isMobile = useSelector(selectIsMobile);\r\n    const dispatch = useDispatch();\r\n\r\n   // Handle Screen size\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            if (window.innerWidth < 1441) {\r\n                dispatch(setIsMobile(true));\r\n            } else {\r\n                dispatch(setIsMobile(false));\r\n            }\r\n        };\r\n    \r\n        window.addEventListener('resize', handleResize);\r\n        window.addEventListener('load', handleResize);\r\n    \r\n        return () => {\r\n            window.removeEventListener('resize', handleResize);\r\n            window.removeEventListener('load', handleResize);\r\n        };\r\n    }, []);\r\n\r\n  return {\r\n    isMobile\r\n  }\r\n}\r\n\r\nexport default useMobile;"],"names":["dispatch","useDispatch","_jsx","className","onClick","setNavOpen","children","IconContainer","icon","MdMenu","_ref","handleCreateBoard","_useAuth","handleToggleNotificationTab","useAuth","userInfo","isAuthenticated","user","isMobile","useMobile","_jsxs","MenuIcon","first_name","Space","_Fragment","BsPlus","useSelector","selectIsMobile","useEffect","handleResize","window","innerWidth","setIsMobile","addEventListener","removeEventListener"],"sourceRoot":""}