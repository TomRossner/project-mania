{"version":3,"file":"static/js/802.2e72f7dc.chunk.js","mappings":"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","sources":["components/Logo.js","components/NavLink.js","components/NavBar.js","hooks/useMobile.js"],"sourcesContent":["import React from 'react';\r\nimport { SiGoogletagmanager } from \"react-icons/si\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {AiFillProject} from \"react-icons/ai\";\r\nimport IconContainer from './common/IconContainer';\r\n\r\nconst Logo = () => {\r\n  const navigate = useNavigate();\r\n  const handleLogoClick = () => navigate(\"/\");\r\n\r\n  return (\r\n    <div className='logo-container' onClick={handleLogoClick}>\r\n        <IconContainer icon={<AiFillProject className='icon logo'/>}/>\r\n        <p>Project Mania</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport IconContainer from './common/IconContainer';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NavLink = ({icon, path, text, onClick}) => {\r\n  return (\r\n    <li onClick={onClick}>\r\n        <IconContainer icon={icon}/>\r\n        <Link className='link' to={path}>{text}</Link>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default NavLink;","import React, { useEffect, useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport Logo from './Logo';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport IconContainer from './common/IconContainer';\r\nimport {BsChatLeftText, BsChevronDown} from \"react-icons/bs\";\r\nimport {IoSettingsOutline} from \"react-icons/io5\";\r\nimport {AiOutlineInfoCircle, AiOutlineProject} from \"react-icons/ai\";\r\nimport { setCurrentProject } from '../store/project/project.actions';\r\nimport useAuth from '../hooks/useAuth';\r\nimport {MdLogout, MdLogin, MdPerson} from \"react-icons/md\";\r\nimport {ImUserPlus} from \"react-icons/im\";\r\nimport {HiUserGroup} from \"react-icons/hi\";\r\nimport useProject from '../hooks/useProject';\r\nimport Space from \"./common/Space\";\r\nimport BlankProfilePicture from './common/BlankProfilePicture';\r\nimport { RxCross1, RxHome } from 'react-icons/rx';\r\nimport NavLink from './NavLink';\r\nimport { selectNavOpen } from '../store/globalStates/globalStates.selector';\r\nimport useMobile from '../hooks/useMobile';\r\nimport ProfilePicture from './common/ProfilePicture';\r\n\r\nconst NavBar = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const {boards, closeMenu} = useProject();\r\n  const {user, isAuthenticated, userInfo, profileImage, loadProfileImage} = useAuth();\r\n  const [projectsDropdownOpen, setProjectsDropdownOpen] = useState(false);\r\n  const [userName, setUserName] = useState(\"\");\r\n  // const {isMobile} = useMobile();\r\n  const {isMobile} = useMobile();\r\n  const navOpen = useSelector(selectNavOpen);\r\n\r\n  const handleToggleProjectsDropdown = () => {\r\n    return setProjectsDropdownOpen(!projectsDropdownOpen);\r\n  }\r\n\r\n  const handleClick = (board) => {\r\n    closeMenu();\r\n    dispatch(setCurrentProject(board));\r\n    navigate(`/projects/${board._id}`);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n        setUserName(`${userInfo.first_name} ${userInfo.last_name}` || userInfo.name);\r\n    } else setUserName(\"\");\r\n  }, [userInfo]);\r\n\r\n  // Update profile image\r\n  useEffect(() => {\r\n    if (!userInfo) return;\r\n\r\n    loadProfileImage();\r\n\r\n  }, [userInfo]);\r\n\r\n  useEffect(() => {\r\n    console.log(isMobile)\r\n  }, [isMobile])\r\n  \r\n\r\n  return (\r\n    <>\r\n    {isMobile\r\n      ? <nav className={navOpen ? 'mobile open' : 'mobile'}>\r\n          <Logo/>\r\n          <IconContainer additionalClass={'cross'} icon={<RxCross1 className='icon xl'/>} onClick={closeMenu}/>\r\n          <ul className='flex1'>\r\n              <NavLink path={'/'} icon={<RxHome className='icon'/>} text={'Home'} onClick={closeMenu}/>\r\n              <div className='li-expand'>\r\n                <li onClick={handleToggleProjectsDropdown}>\r\n                  <IconContainer icon={<AiOutlineProject className='icon'/>}/>\r\n                    <Link className='link flex1'>Projects</Link>\r\n                  <IconContainer icon={<BsChevronDown className={`icon ${!projectsDropdownOpen ? 'reversed' : ''}`}/>}/>\r\n                </li>\r\n                {user && isAuthenticated && boards.length ?\r\n                  <>\r\n                    <div className={`${projectsDropdownOpen ? \"dropdown open\" : \"dropdown\"}`}>\r\n                      {boards?.map(project => <p key={project._id} onClick={() => handleClick(project)}>{project.title}</p>)}\r\n                    </div>\r\n                  </>\r\n                  : null}\r\n              </div>\r\n              <NavLink path={'/users'} icon={<HiUserGroup className='icon'/>} text={'Browse users'} onClick={closeMenu}/>\r\n              <NavLink path={`/chat/${user?._id}`} icon={<BsChatLeftText className='icon'/>} text={'Chat'} onClick={closeMenu}/>\r\n              <NavLink path={'/about'} icon={<AiOutlineInfoCircle className='icon'/>} text={'About'} onClick={closeMenu}/>\r\n              <NavLink path={'/settings'} icon={<IoSettingsOutline className='icon'/>} text={'Settings'} onClick={closeMenu}/>\r\n          </ul>\r\n          <ul id='left-nav-bottom-ul'>\r\n            <div className='li-expand'>\r\n              <div className=\"dropdown open\">\r\n                {\r\n                  !user || !isAuthenticated ?\r\n                  <>\r\n                    <Link className=\"link flex-align\" to=\"/sign-in\" onClick={closeMenu}><IconContainer icon={<MdLogin className=\"icon\"/>}/>Login</Link>\r\n                    <Link className=\"link flex-align\" to=\"/sign-up\" onClick={closeMenu}><IconContainer icon={<ImUserPlus className=\"icon\"/>}/>Sign up</Link>\r\n                  </>\r\n                  :\r\n                  <>\r\n                    <Link className=\"link flex-align\" to=\"/profile\" onClick={closeMenu}><IconContainer icon={<MdPerson className=\"icon large\"/>}/>My profile</Link>\r\n                    <Link className=\"link flex-align\" to=\"/logout\" onClick={closeMenu}><IconContainer icon={<MdLogout className=\"icon\"/>}/>Logout</Link>\r\n                  </>\r\n                }\r\n                <Space/>\r\n              </div>\r\n            </div>\r\n            {user && isAuthenticated && (\r\n              <div className='profile'>\r\n                {profileImage\r\n                ? <ProfilePicture src={profileImage}/>\r\n                : <BlankProfilePicture/>}\r\n                <span>{userName}</span>\r\n              </div>\r\n            )}\r\n          </ul>\r\n        </nav>\r\n      : <nav>\r\n          <Logo/>\r\n          <IconContainer additionalClass={'cross'} icon={<RxCross1 className='icon xl'/>} onClick={closeMenu}/>\r\n          <ul className='flex1'>\r\n              <NavLink path={'/'} icon={<RxHome className='icon'/>} text={'Home'} onClick={closeMenu}/>\r\n              <div className='li-expand'>\r\n                <li onClick={handleToggleProjectsDropdown}>\r\n                  <IconContainer icon={<AiOutlineProject className='icon'/>}/>\r\n                    <Link className='link flex1'>Projects</Link>\r\n                  <IconContainer icon={<BsChevronDown className={`icon ${!projectsDropdownOpen ? 'reversed' : ''}`}/>}/>\r\n                </li>\r\n                {user && isAuthenticated && boards.length ?\r\n                  <>\r\n                    <div className={`${projectsDropdownOpen ? \"dropdown open\" : \"dropdown\"}`}>\r\n                      {boards?.map(project => <p key={project._id} onClick={() => handleClick(project)}>{project.title}</p>)}\r\n                    </div>\r\n                  </>\r\n                  : null}\r\n              </div>\r\n              <NavLink path={'/users'} icon={<HiUserGroup className='icon'/>} text={'Browse users'} onClick={closeMenu}/>\r\n              <NavLink path={`/chat/${user?._id}`} icon={<BsChatLeftText className='icon'/>} text={'Chat'} onClick={closeMenu}/>\r\n              <NavLink path={'/about'} icon={<AiOutlineInfoCircle className='icon'/>} text={'About'} onClick={closeMenu}/>\r\n              <NavLink path={'/settings'} icon={<IoSettingsOutline className='icon'/>} text={'Settings'} onClick={closeMenu}/>\r\n          </ul>\r\n          <ul id='left-nav-bottom-ul'>\r\n            <div className='li-expand'>\r\n              <div className=\"dropdown open\">\r\n                {\r\n                  !user || !isAuthenticated ?\r\n                  <>\r\n                    <Link className=\"link flex-align\" to=\"/sign-in\" onClick={closeMenu}><IconContainer icon={<MdLogin className=\"icon\"/>}/>Login</Link>\r\n                    <Link className=\"link flex-align\" to=\"/sign-up\" onClick={closeMenu}><IconContainer icon={<ImUserPlus className=\"icon\"/>}/>Sign up</Link>\r\n                  </>\r\n                  :\r\n                  <>\r\n                    <Link className=\"link flex-align\" to=\"/profile\" onClick={closeMenu}><IconContainer icon={<MdPerson className=\"icon large\"/>}/>My profile</Link>\r\n                    <Link className=\"link flex-align\" to=\"/logout\" onClick={closeMenu}><IconContainer icon={<MdLogout className=\"icon\"/>}/>Logout</Link>\r\n                  </>\r\n                }\r\n                <Space/>\r\n              </div>\r\n            </div>\r\n            {user && isAuthenticated && (\r\n              <div className='profile'>\r\n                {profileImage\r\n                ? <ProfilePicture src={profileImage}/>\r\n                : <BlankProfilePicture/>}\r\n                <span>{userName}</span>\r\n              </div>\r\n            )}\r\n          </ul>\r\n        </nav>\r\n    }\r\n    </>\r\n  //   <>\r\n  //   {isMobile ? (\r\n  //     <>\r\n  //       <nav className={navOpen ? 'mobile open' : 'mobile'}>\r\n  //         <Logo/>\r\n  //         <IconContainer additionalClass={'cross'} icon={<RxCross1 className='icon xl'/>} onClick={closeMenu}/>\r\n  //         <ul className='flex1'>\r\n  //             <NavLink path={'/'} icon={<RxHome className='icon'/>} text={'Home'} onClick={closeMenu}/>\r\n  //             <div className='li-expand'>\r\n  //               <li onClick={handleToggleProjectsDropdown}>\r\n  //                 <IconContainer icon={<AiOutlineProject className='icon'/>}/>\r\n  //                   <Link className='link flex1'>Projects</Link>\r\n  //                 <IconContainer icon={<BsChevronDown className={`icon ${!projectsDropdownOpen ? 'reversed' : ''}`}/>}/>\r\n  //               </li>\r\n  //               {user && isAuthenticated && boards.length ?\r\n  //               <>\r\n  //               <div className={`${projectsDropdownOpen ? \"dropdown open\" : \"dropdown\"}`}>\r\n  //                 {boards?.map(project => <p key={project._id} onClick={() => handleClick(project)}>{project.title}</p>)}\r\n  //               </div>\r\n  //               </> : null}\r\n  //             </div>\r\n  //             <NavLink path={'/users'} icon={<HiUserGroup className='icon'/>} text={'Browse users'} onClick={closeMenu}/>\r\n  //             <NavLink path={`/chat/${user?._id}`} icon={<BsChatLeftText className='icon'/>} text={'Chat'} onClick={closeMenu}/>\r\n  //             <NavLink path={'/about'} icon={<AiOutlineInfoCircle className='icon'/>} text={'About'} onClick={closeMenu}/>\r\n  //             <NavLink path={'/settings'} icon={<IoSettingsOutline className='icon'/>} text={'Settings'} onClick={closeMenu}/>\r\n  //         </ul>\r\n  //         <ul id='left-nav-bottom-ul'>\r\n  //           <div className='li-expand'>\r\n  //             <div className=\"dropdown open\">\r\n  //               {\r\n  //                 !user || !isAuthenticated ?\r\n  //                 <>\r\n  //                   <Link className=\"link flex-align\" to=\"/sign-in\" onClick={closeMenu}><IconContainer icon={<MdLogin className=\"icon\"/>}/>Login</Link>\r\n  //                   <Link className=\"link flex-align\" to=\"/sign-up\" onClick={closeMenu}><IconContainer icon={<ImUserPlus className=\"icon\"/>}/>Sign up</Link>\r\n  //                 </>\r\n  //                 :\r\n  //                 <>\r\n  //                   <Link className=\"link flex-align\" to=\"/profile\" onClick={closeMenu}><IconContainer icon={<MdPerson className=\"icon large\"/>}/>My profile</Link>\r\n  //                   <Link className=\"link flex-align\" to=\"/logout\" onClick={closeMenu}><IconContainer icon={<MdLogout className=\"icon\"/>}/>Logout</Link>\r\n  //                 </>\r\n  //               }\r\n  //               <Space/>\r\n  //             </div>\r\n  //           </div>\r\n  //           {user && isAuthenticated && (\r\n  //             <div className='profile'>\r\n  //               {profileImage\r\n  //               ? <ProfilePicture src={profileImage}/>\r\n  //               : <BlankProfilePicture/>}\r\n  //               <span>{userName}</span>\r\n  //             </div>\r\n  //           )}\r\n  //         </ul>\r\n  //       </nav>\r\n  //     </>\r\n  //   ) : (\r\n  //     <nav>\r\n  //       <Logo/>\r\n  //       <ul className='flex1'>\r\n  //           <NavLink path={'/'} icon={<RxHome className='icon'/>} text={'Home'}/>\r\n  //           <div className='li-expand'>\r\n  //             <li onClick={handleToggleProjectsDropdown}>\r\n  //               <IconContainer icon={<AiOutlineProject className='icon'/>}/>\r\n  //                 <Link className='link flex1'>Projects</Link>\r\n  //               <IconContainer icon={<BsChevronDown className={`icon ${!projectsDropdownOpen ? 'reversed' : ''}`}/>}/>\r\n  //             </li>\r\n  //             {user && isAuthenticated && boards.length ?\r\n  //             <>\r\n  //             <div className={`${projectsDropdownOpen ? \"dropdown open\" : \"dropdown\"}`}>\r\n  //               {boards?.map(project => <p key={project._id} onClick={() => handleClick(project)}>{project.title}</p>)}\r\n  //             </div>\r\n  //             </> : null}\r\n  //           </div>\r\n  //           <NavLink path={'/users'} icon={<HiUserGroup className='icon'/>} text={'Browse users'}/>\r\n  //           <NavLink path={`/chat/${user?._id}`} icon={<BsChatLeftText className='icon'/>} text={'Chat'}/>\r\n  //           <NavLink path={'/about'} icon={<AiOutlineInfoCircle className='icon'/>} text={'About'}/>\r\n  //           <NavLink path={'/settings'} icon={<IoSettingsOutline className='icon'/>} text={'Settings'}/>\r\n  //       </ul>\r\n  //       <ul id='left-nav-bottom-ul'>\r\n  //         <div className='li-expand'>\r\n  //           <div className=\"dropdown open\">\r\n  //             {\r\n  //               !user || !isAuthenticated ?\r\n  //               <>\r\n  //                 <Link className=\"link flex-align\" to=\"/sign-in\"><IconContainer icon={<MdLogin className=\"icon\"/>}/>Login</Link>\r\n  //                 <Link className=\"link flex-align\" to=\"/sign-up\"><IconContainer icon={<ImUserPlus className=\"icon\"/>}/>Sign up</Link>\r\n  //               </>\r\n  //               :\r\n  //               <>\r\n  //                 <Link className=\"link flex-align\" to=\"/profile\"><IconContainer icon={<MdPerson className=\"icon large\"/>}/>My profile</Link>\r\n  //                 <Link className=\"link flex-align\" to=\"/logout\"><IconContainer icon={<MdLogout className=\"icon\"/>}/>Logout</Link>\r\n  //               </>\r\n  //             }\r\n  //             <Space/>\r\n  //           </div>\r\n  //         </div>\r\n  //         {user && isAuthenticated && (\r\n  //           <div className='profile'>\r\n  //             {profileImage\r\n  //             ? <ProfilePicture src={profileImage}/>\r\n  //             : <BlankProfilePicture/>}\r\n  //             <span>{userName}</span>\r\n  //           </div>\r\n  //         )}\r\n  //       </ul>\r\n  //     </nav>\r\n  //   )\r\n  // }\r\n  //   </>\r\n  )\r\n}\r\n\r\nexport default NavBar;","import { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setIsMobile } from '../store/globalStates/globalStates.actions';\r\nimport { selectIsMobile } from '../store/globalStates/globalStates.selector';\r\n\r\nconst useMobile = () => {\r\n    const isMobile = useSelector(selectIsMobile);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleResize = () => {\r\n        if (window.innerWidth <= 1280) {\r\n            dispatch(setIsMobile(true));\r\n        } else {\r\n            dispatch(setIsMobile(false));\r\n        }\r\n    };\r\n\r\n   // Handle screen size\r\n    useEffect(() => {\r\n    \r\n        window.addEventListener('load', handleResize);\r\n        // window.addEventListener('resize', handleResize);\r\n    \r\n        return () => {\r\n            window.removeEventListener('load', handleResize);\r\n            // window.removeEventListener('resize', handleResize);\r\n        };\r\n    }, []);\r\n\r\n  return {\r\n    isMobile\r\n  }\r\n}\r\n\r\nexport default useMobile;"],"names":["navigate","useNavigate","_jsxs","className","onClick","children","_jsx","IconContainer","icon","AiFillProject","_ref","path","text","Link","to","dispatch","useDispatch","_useProject","useProject","boards","closeMenu","_useAuth","useAuth","user","isAuthenticated","userInfo","profileImage","loadProfileImage","_useState","useState","_useState2","_slicedToArray","projectsDropdownOpen","setProjectsDropdownOpen","_useState3","_useState4","userName","setUserName","isMobile","useMobile","navOpen","useSelector","selectNavOpen","handleToggleProjectsDropdown","handleClick","board","setCurrentProject","concat","_id","useEffect","first_name","last_name","name","console","log","_Fragment","Logo","additionalClass","RxCross1","NavLink","RxHome","AiOutlineProject","BsChevronDown","length","map","project","title","HiUserGroup","BsChatLeftText","AiOutlineInfoCircle","IoSettingsOutline","id","MdPerson","MdLogout","MdLogin","ImUserPlus","Space","ProfilePicture","src","BlankProfilePicture","selectIsMobile","handleResize","window","innerWidth","setIsMobile","addEventListener","removeEventListener"],"sourceRoot":""}