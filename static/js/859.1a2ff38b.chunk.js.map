{"version":3,"file":"static/js/859.1a2ff38b.chunk.js","mappings":"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","sources":["components/dashboard/Activity.js","components/dashboard/ActivitySection.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport BlankProfilePicture from '../common/BlankProfilePicture';\r\nimport useProject from '../../hooks/useProject';\r\nimport { format_AM_PM, format_date } from '../../utils/timeFormats';\r\nimport { generateKey } from '../../utils/keyGenerator';\r\nimport IconContainer from '../common/IconContainer';\r\nimport { MdHistory } from 'react-icons/md';\r\n\r\nconst Activity = () => {\r\n  const {currentProject} = useProject();\r\n  const bottomRef = useRef(null);\r\n\r\n  // Scroll to last activity\r\n  const scrollToBottom = () => {\r\n    bottomRef.current?.scrollIntoView();\r\n}\r\n\r\n  // Scroll to last activity\r\n  useEffect(() => {\r\n    if (!currentProject?.activity?.length) return;\r\n      scrollToBottom();\r\n  }, [currentProject]);\r\n\r\n  return (\r\n    <div className=\"activity-container\">\r\n        <div className='title-with-icon'>\r\n          <IconContainer icon={<MdHistory className='icon xl blue'/>}/>  \r\n          <h3>Recent Activity</h3>\r\n        </div>\r\n        <div className='timeline'>\r\n            <div className='dashed-line'></div>\r\n            <div className='activities'>\r\n              {currentProject?.activity?.map(act => {\r\n                return (\r\n                  <div key={generateKey()} className='activity'>\r\n                    <div className='activity-text'>\r\n                      {act.created_by.image\r\n                      ? <div className='profile-img-container'><img src={Buffer.from(act.created_by.image) || act.created_by.image.toString()} alt=\"profile\"/></div>\r\n                      : <BlankProfilePicture/>}\r\n                      <p><span>{act.created_by.user_name}</span> {act.text}</p>\r\n                    </div>\r\n                    <span className='activity-time'>{format_date(act.created_at)} - {format_AM_PM(act.created_at)}</span>\r\n                  </div>\r\n                )\r\n              })}\r\n              <div ref={bottomRef}></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Activity;","import React, { Suspense, lazy, useEffect } from 'react';\r\nimport Activity from './Activity';\r\nimport useProject from '../../hooks/useProject';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setActivity } from '../../store/project/project.actions';\r\nimport { selectActivitySectionOpen } from '../../store/globalStates/globalStates.selector';\r\nimport IconContainer from '../common/IconContainer';\r\nimport { setActivitySectionOpen } from '../../store/globalStates/globalStates.actions';\r\nimport { BsChevronLeft } from 'react-icons/bs';\r\nimport Spinner from '../common/Spinner';\r\nimport { RxCross1 } from 'react-icons/rx';\r\n\r\nconst ProjectAdmins = lazy(() => import(\"./ProjectAdmins\"));\r\n\r\nconst ActivitySection = () => {\r\n    const {currentProject} = useProject();\r\n    const dispatch = useDispatch();\r\n    const activitySectionOpen = useSelector(selectActivitySectionOpen);\r\n\r\n    const handleToggleActivitySection = () => {\r\n      dispatch(setActivitySectionOpen(!activitySectionOpen));\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n      // Set activity\r\n      dispatch(setActivity(currentProject.activity));\r\n\r\n    }, [currentProject]);\r\n\r\n  return (\r\n    <>\r\n      {currentProject && (\r\n        <nav id=\"activity-section\" className={activitySectionOpen ? 'open' : ''}>\r\n          <IconContainer additionalClass={'cross'} icon={<RxCross1 className='icon xl'/>} onClick={handleToggleActivitySection}/>\r\n          <IconContainer additionalClass={activitySectionOpen ? 'toggle-collapse rotate' : 'toggle-collapse'} icon={<BsChevronLeft className='icon'/>} onClick={handleToggleActivitySection}/>\r\n          <div className=\"right-nav-content\">\r\n\r\n          <div className=\"project-content\">\r\n              <div className=\"current-project-info\">\r\n                <h3>{currentProject?.title}</h3>\r\n                <p>{currentProject?.subtitle}</p>\r\n              </div>\r\n              <Suspense fallback={<div><Spinner/><h3>Loading admins...</h3></div>}>\r\n                <ProjectAdmins/>\r\n              </Suspense>\r\n          </div>\r\n\r\n          <div className='activity-section'>\r\n            <Activity/>\r\n          </div>\r\n\r\n          </div>\r\n        </nav>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ActivitySection;"],"names":["_currentProject$activ2","currentProject","useProject","bottomRef","useRef","useEffect","_currentProject$activ","activity","length","_bottomRef$current","current","scrollIntoView","scrollToBottom","_jsxs","className","children","_jsx","IconContainer","icon","MdHistory","map","act","created_by","image","src","Buffer","from","toString","alt","BlankProfilePicture","user_name","text","format_date","created_at","format_AM_PM","generateKey","ref","ProjectAdmins","lazy","dispatch","useDispatch","activitySectionOpen","useSelector","selectActivitySectionOpen","handleToggleActivitySection","setActivitySectionOpen","setActivity","_Fragment","id","additionalClass","RxCross1","onClick","BsChevronLeft","title","subtitle","Suspense","fallback","Spinner","Activity"],"sourceRoot":""}